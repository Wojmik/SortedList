<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SortedList</name>
    </assembly>
    <members>
        <member name="T:WojciechMikołajewicz.SortedList.BinarySearchers">
            <summary>
            Extension of IReadOnlyList&lt;T&gt;, ReadOnlySpan&lt;T&gt;, Span&lt;T&gt;, ReadOnlyMemory&lt;T&gt;, Memory&lt;T&gt; allowing binary search in sorted lists
            </summary>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.BinarySearchers.BinaryFindEqual``2(System.Collections.Generic.IReadOnlyList{``0},System.Range,``1@,System.Func{``0,``1,System.Int32})">
            <summary>
            Find range of items equal to searched one.
            <paramref name="list"/> has to be sorted and <paramref name="comparison"/> method has to use same sorting.
            </summary>
            <typeparam name="T">Type of items</typeparam>
            <typeparam name="TState">Type of state parameter</typeparam>
            <param name="list">Sorted list</param>
            <param name="range">Range in <paramref name="list"/> to search in</param>
            <param name="state">State parameter - goes to <paramref name="comparison"/> mathod as second parameter</param>
            <param name="comparison">Method should determine whether the passed item is less (-1), equal (0) or greater (1) than searching one (item.CompareTo(SearchingItem))</param>
            <returns>Range of items in <paramref name="list"/> equals to serched one</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.BinarySearchers.BinaryFindEqual``1(System.Collections.Generic.IReadOnlyList{``0},System.Range,System.Func{``0,System.Int32})">
            <summary>
            Find range of items equal to searched one.
            <paramref name="list"/> has to be sorted and <paramref name="comparison"/> method has to use same sorting.
            </summary>
            <typeparam name="T">Type of items</typeparam>
            <param name="list">Sorted list</param>
            <param name="range">Range in <paramref name="list"/> to search in</param>
            <param name="comparison">Method should determine whether the passed item is less (-1), equal (0) or greater (1) than searching one (item.CompareTo(SearchingItem))</param>
            <returns>Range of items in <paramref name="list"/> equals to serched one</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.BinarySearchers.BinaryFindLessOrEqual``2(System.Collections.Generic.IReadOnlyList{``0},System.Range,``1@,System.Func{``0,``1,System.Int32})">
            <summary>
            Find range of items less or equal to searched one.
            <paramref name="list"/> has to be sorted and <paramref name="comparison"/> method has to use same sorting.
            </summary>
            <typeparam name="T">Type of items</typeparam>
            <typeparam name="TState">Type of state parameter</typeparam>
            <param name="list">Sorted list</param>
            <param name="range">Range in <paramref name="list"/> to search in</param>
            <param name="state">State parameter - goes to <paramref name="comparison"/> mathod as second parameter</param>
            <param name="comparison">Method should determine whether the passed item is less (-1), equal (0) or greater (1) than searching one (item.CompareTo(SearchingItem))</param>
            <returns>Range of items in <paramref name="list"/> less or equals to serched one</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.BinarySearchers.BinaryFindLessOrEqual``1(System.Collections.Generic.IReadOnlyList{``0},System.Range,System.Func{``0,System.Int32})">
            <summary>
            Find range of items less or equal to searched one.
            <paramref name="list"/> has to be sorted and <paramref name="comparison"/> method has to use same sorting.
            </summary>
            <typeparam name="T">Type of items</typeparam>
            <param name="list">Sorted list</param>
            <param name="range">Range in <paramref name="list"/> to search in</param>
            <param name="comparison">Method should determine whether the passed item is less (-1), equal (0) or greater (1) than searching one (item.CompareTo(SearchingItem))</param>
            <returns>Range of items in <paramref name="list"/> less or equals to serched one</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.BinarySearchers.BinaryFindLess``2(System.Collections.Generic.IReadOnlyList{``0},System.Range,``1@,System.Func{``0,``1,System.Int32})">
            <summary>
            Find range of items less than searched one.
            <paramref name="list"/> has to be sorted and <paramref name="comparison"/> method has to use same sorting.
            </summary>
            <typeparam name="T">Type of items</typeparam>
            <typeparam name="TState">Type of state parameter</typeparam>
            <param name="list">Sorted list</param>
            <param name="range">Range in <paramref name="list"/> to search in</param>
            <param name="state">State parameter - goes to <paramref name="comparison"/> mathod as second parameter</param>
            <param name="comparison">Method should determine whether the passed item is less (-1), equal (0) or greater (1) than searching one (item.CompareTo(SearchingItem))</param>
            <returns>Range of items in <paramref name="list"/> less than serched one</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.BinarySearchers.BinaryFindLess``1(System.Collections.Generic.IReadOnlyList{``0},System.Range,System.Func{``0,System.Int32})">
            <summary>
            Find range of items less than searched one.
            <paramref name="list"/> has to be sorted and <paramref name="comparison"/> method has to use same sorting.
            </summary>
            <typeparam name="T">Type of items</typeparam>
            <param name="list">Sorted list</param>
            <param name="range">Range in <paramref name="list"/> to search in</param>
            <param name="comparison">Method should determine whether the passed item is less (-1), equal (0) or greater (1) than searching one (item.CompareTo(SearchingItem))</param>
            <returns>Range of items in <paramref name="list"/> less than serched one</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.BinarySearchers.BinaryFindGreaterOrEqual``2(System.Collections.Generic.IReadOnlyList{``0},System.Range,``1@,System.Func{``0,``1,System.Int32})">
            <summary>
            Find range of items greater or equal to searched one.
            <paramref name="list"/> has to be sorted and <paramref name="comparison"/> method has to use same sorting.
            </summary>
            <typeparam name="T">Type of items</typeparam>
            <typeparam name="TState">Type of state parameter</typeparam>
            <param name="list">Sorted list</param>
            <param name="range">Range in <paramref name="list"/> to search in</param>
            <param name="state">State parameter - goes to <paramref name="comparison"/> mathod as second parameter</param>
            <param name="comparison">Method should determine whether the passed item is less (-1), equal (0) or greater (1) than searching one (item.CompareTo(SearchingItem))</param>
            <returns>Range of items in <paramref name="list"/> greater or equals to serched one</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.BinarySearchers.BinaryFindGreaterOrEqual``1(System.Collections.Generic.IReadOnlyList{``0},System.Range,System.Func{``0,System.Int32})">
            <summary>
            Find range of items greater or equal to searched one.
            <paramref name="list"/> has to be sorted and <paramref name="comparison"/> method has to use same sorting.
            </summary>
            <typeparam name="T">Type of items</typeparam>
            <param name="list">Sorted list</param>
            <param name="range">Range in <paramref name="list"/> to search in</param>
            <param name="comparison">Method should determine whether the passed item is less (-1), equal (0) or greater (1) than searching one (item.CompareTo(SearchingItem))</param>
            <returns>Range of items in <paramref name="list"/> greater or equals to serched one</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.BinarySearchers.BinaryFindGreater``2(System.Collections.Generic.IReadOnlyList{``0},System.Range,``1@,System.Func{``0,``1,System.Int32})">
            <summary>
            Find range of items greater than searched one.
            <paramref name="list"/> has to be sorted and <paramref name="comparison"/> method has to use same sorting.
            </summary>
            <typeparam name="T">Type of items</typeparam>
            <typeparam name="TState">Type of state parameter</typeparam>
            <param name="list">Sorted list</param>
            <param name="range">Range in <paramref name="list"/> to search in</param>
            <param name="state">State parameter - goes to <paramref name="comparison"/> mathod as second parameter</param>
            <param name="comparison">Method should determine whether the passed item is less (-1), equal (0) or greater (1) than searching one (item.CompareTo(SearchingItem))</param>
            <returns>Range of items in <paramref name="list"/> greater than serched one</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.BinarySearchers.BinaryFindGreater``1(System.Collections.Generic.IReadOnlyList{``0},System.Range,System.Func{``0,System.Int32})">
            <summary>
            Find range of items greater than searched one.
            <paramref name="list"/> has to be sorted and <paramref name="comparison"/> method has to use same sorting.
            </summary>
            <typeparam name="T">Type of items</typeparam>
            <param name="list">Sorted list</param>
            <param name="range">Range in <paramref name="list"/> to search in</param>
            <param name="comparison">Method should determine whether the passed item is less (-1), equal (0) or greater (1) than searching one (item.CompareTo(SearchingItem))</param>
            <returns>Range of items in <paramref name="list"/> greater than serched one</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.BinarySearchers.BinaryFindEqual``2(System.ReadOnlySpan{``0}@,``1@,System.Func{``0,``1,System.Int32})">
            <summary>
            Return span of items equal to searched one.
            <paramref name="span"/> has to be sorted and <paramref name="comparison"/> method has to use same sorting.
            </summary>
            <typeparam name="T">Type of items</typeparam>
            <typeparam name="TState">Type of state parameter</typeparam>
            <param name="span">Sorted span</param>
            <param name="state">State parameter - goes to <paramref name="comparison"/> mathod as second parameter</param>
            <param name="comparison">Method should determine whether the passed item is less (-1), equal (0) or greater (1) than searching one (item.CompareTo(SearchingItem))</param>
            <returns><see cref="T:System.Range"/> of items in <paramref name="span"/> equals to serched one</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.BinarySearchers.BinaryFindEqual``1(System.ReadOnlySpan{``0}@,System.Func{``0,System.Int32})">
            <summary>
            Return span of items equal to searched one.
            <paramref name="span"/> has to be sorted and <paramref name="comparison"/> method has to use same sorting.
            </summary>
            <typeparam name="T">Type of items</typeparam>
            <param name="span">Sorted span</param>
            <param name="comparison">Method should determine whether the passed item is less (-1), equal (0) or greater (1) than searching one (item.CompareTo(SearchingItem))</param>
            <returns><see cref="T:System.Range"/> of items in <paramref name="span"/> equals to serched one</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.BinarySearchers.BinaryFindLessOrEqual``2(System.ReadOnlySpan{``0}@,``1@,System.Func{``0,``1,System.Int32})">
            <summary>
            Return span of items less or equal to searched one.
            <paramref name="span"/> has to be sorted and <paramref name="comparison"/> method has to use same sorting.
            </summary>
            <typeparam name="T">Type of items</typeparam>
            <typeparam name="TState">Type of state parameter</typeparam>
            <param name="span">Sorted span</param>
            <param name="state">State parameter - goes to <paramref name="comparison"/> mathod as second parameter</param>
            <param name="comparison">Method should determine whether the passed item is less (-1), equal (0) or greater (1) than searching one (item.CompareTo(SearchingItem))</param>
            <returns><see cref="T:System.Range"/> of items in <paramref name="span"/> less or equals to serched one</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.BinarySearchers.BinaryFindLessOrEqual``1(System.ReadOnlySpan{``0}@,System.Func{``0,System.Int32})">
            <summary>
            Return span of items less or equal to searched one.
            <paramref name="span"/> has to be sorted and <paramref name="comparison"/> method has to use same sorting.
            </summary>
            <typeparam name="T">Type of items</typeparam>
            <param name="span">Sorted span</param>
            <param name="comparison">Method should determine whether the passed item is less (-1), equal (0) or greater (1) than searching one (item.CompareTo(SearchingItem))</param>
            <returns><see cref="T:System.Range"/> of items in <paramref name="span"/> less or equals to serched one</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.BinarySearchers.BinaryFindLess``2(System.ReadOnlySpan{``0}@,``1@,System.Func{``0,``1,System.Int32})">
            <summary>
            Return span of items less than searched one.
            <paramref name="span"/> has to be sorted and <paramref name="comparison"/> method has to use same sorting.
            </summary>
            <typeparam name="T">Type of items</typeparam>
            <typeparam name="TState">Type of state parameter</typeparam>
            <param name="span">Sorted span</param>
            <param name="state">State parameter - goes to <paramref name="comparison"/> mathod as second parameter</param>
            <param name="comparison">Method should determine whether the passed item is less (-1), equal (0) or greater (1) than searching one (item.CompareTo(SearchingItem))</param>
            <returns><see cref="T:System.Range"/> of items in <paramref name="span"/> less than serched one</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.BinarySearchers.BinaryFindLess``1(System.ReadOnlySpan{``0}@,System.Func{``0,System.Int32})">
            <summary>
            Return span of items less than searched one.
            <paramref name="span"/> has to be sorted and <paramref name="comparison"/> method has to use same sorting.
            </summary>
            <typeparam name="T">Type of items</typeparam>
            <param name="span">Sorted span</param>
            <param name="comparison">Method should determine whether the passed item is less (-1), equal (0) or greater (1) than searching one (item.CompareTo(SearchingItem))</param>
            <returns><see cref="T:System.Range"/> of items in <paramref name="span"/> less than serched one</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.BinarySearchers.BinaryFindGreaterOrEqual``2(System.ReadOnlySpan{``0}@,``1@,System.Func{``0,``1,System.Int32})">
            <summary>
            Return span of items greater or equal to searched one.
            <paramref name="span"/> has to be sorted and <paramref name="comparison"/> method has to use same sorting.
            </summary>
            <typeparam name="T">Type of items</typeparam>
            <typeparam name="TState">Type of state parameter</typeparam>
            <param name="span">Sorted span</param>
            <param name="state">State parameter - goes to <paramref name="comparison"/> mathod as second parameter</param>
            <param name="comparison">Method should determine whether the passed item is less (-1), equal (0) or greater (1) than searching one (item.CompareTo(SearchingItem))</param>
            <returns><see cref="T:System.Range"/> of items in <paramref name="span"/> greater or equals to serched one</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.BinarySearchers.BinaryFindGreaterOrEqual``1(System.ReadOnlySpan{``0}@,System.Func{``0,System.Int32})">
            <summary>
            Return span of items greater or equal to searched one.
            <paramref name="span"/> has to be sorted and <paramref name="comparison"/> method has to use same sorting.
            </summary>
            <typeparam name="T">Type of items</typeparam>
            <param name="span">Sorted span</param>
            <param name="comparison">Method should determine whether the passed item is less (-1), equal (0) or greater (1) than searching one (item.CompareTo(SearchingItem))</param>
            <returns><see cref="T:System.Range"/> of items in <paramref name="span"/> greater or equals to serched one</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.BinarySearchers.BinaryFindGreater``2(System.ReadOnlySpan{``0}@,``1@,System.Func{``0,``1,System.Int32})">
            <summary>
            Return span of items greater than searched one.
            <paramref name="span"/> has to be sorted and <paramref name="comparison"/> method has to use same sorting.
            </summary>
            <typeparam name="T">Type of items</typeparam>
            <typeparam name="TState">Type of state parameter</typeparam>
            <param name="span">Sorted span</param>
            <param name="state">State parameter - goes to <paramref name="comparison"/> mathod as second parameter</param>
            <param name="comparison">Method should determine whether the passed item is less (-1), equal (0) or greater (1) than searching one (item.CompareTo(SearchingItem))</param>
            <returns><see cref="T:System.Range"/> of items in <paramref name="span"/> greater than serched one</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.BinarySearchers.BinaryFindGreater``1(System.ReadOnlySpan{``0}@,System.Func{``0,System.Int32})">
            <summary>
            Return span of items greater than searched one.
            <paramref name="span"/> has to be sorted and <paramref name="comparison"/> method has to use same sorting.
            </summary>
            <typeparam name="T">Type of items</typeparam>
            <param name="span">Sorted span</param>
            <param name="comparison">Method should determine whether the passed item is less (-1), equal (0) or greater (1) than searching one (item.CompareTo(SearchingItem))</param>
            <returns><see cref="T:System.Range"/> of items in <paramref name="span"/> greater than serched one</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.IKeyData`1">
            <summary>
            Key data interface
            </summary>
            <typeparam name="T">Type of item</typeparam>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.IKeyData`1.Compare(`0,`0)">
            <summary>
            Compare item's keys
            </summary>
            <param name="x">Item to compare its key</param>
            <param name="y">Item to compare its key</param>
            <returns>Compare result: -1 if key of <paramref name="x"/> is less than key of <paramref name="y"/>, 1 if key of <paramref name="x"/> is greater than key of <paramref name="y"/>, 0 if key of <paramref name="x"/> is equal to key of <paramref name="y"/></returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.IKeyData`1.Compare(`0,System.Object)">
            <summary>
            Compare item's key to <paramref name="value"/>
            </summary>
            <param name="x">Item to compare its key with <paramref name="value"/></param>
            <param name="value">Key value to compare</param>
            <returns>Compare result: -1 if key of <paramref name="x"/> is less than <paramref name="value"/>, 1 if key of <paramref name="x"/> is greater than <paramref name="value"/>, 0 if key of <paramref name="x"/> is equal to <paramref name="value"/></returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.KeyData`2">
            <summary>
            Key data
            </summary>
            <typeparam name="T">Type of item</typeparam>
            <typeparam name="K">Type of key</typeparam>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.KeyData`2.GetMember">
            <summary>
            Gets key member of item
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.KeyData`2.Comparison">
            <summary>
            Key comparison
            </summary>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeyData`2.#ctor(System.Func{`0,`1},System.Comparison{`1})">
            <summary>
            Constructor
            </summary>
            <param name="getMember">Gets key member of item</param>
            <param name="comparison">Key comparison</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeyData`2.#ctor(System.Func{`0,`1},System.Collections.Generic.IComparer{`1})">
            <summary>
            Constructor
            </summary>
            <param name="getMember">Gets key member of item</param>
            <param name="comparer">Key comparer</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeyData`2.#ctor(System.Func{`0,`1})">
            <summary>
            Constructor with default key comparer
            </summary>
            <param name="getMember">Gets key member of item</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeyData`2.Deconstruct(System.Func{`0,`1}@,System.Comparison{`1}@)">
            <summary>
            Deconstruct
            </summary>
            <param name="getMember">Gets key member of item</param>
            <param name="comparison">Key comparison</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeyData`2.Compare(`0,`0)">
            <summary>
            Compare item's keys
            </summary>
            <param name="x">Item to compare its key</param>
            <param name="y">Item to compare its key</param>
            <returns>Compare result: -1 if key of <paramref name="x"/> is less than key of <paramref name="y"/>, 1 if key of <paramref name="x"/> is greater than key of <paramref name="y"/>, 0 if key of <paramref name="x"/> is equal to key of <paramref name="y"/></returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeyData`2.Compare(`0,`1)">
            <summary>
            Compare item's key to <paramref name="value"/>
            </summary>
            <param name="x">Item to compare its key with <paramref name="value"/></param>
            <param name="value">Key value to compare</param>
            <returns>Compare result: -1 if key of <paramref name="x"/> is less than <paramref name="value"/>, 1 if key of <paramref name="x"/> is greater than <paramref name="value"/>, 0 if key of <paramref name="x"/> is equal to <paramref name="value"/></returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeyData`2.WojciechMikołajewicz#SortedList#IKeyData{T}#Compare(`0,System.Object)">
            <summary>
            Compare item's key to <paramref name="value"/>
            </summary>
            <param name="x">Item to compare its key with <paramref name="value"/></param>
            <param name="value">Key value to compare</param>
            <returns>Compare result: -1 if key of <paramref name="x"/> is less than <paramref name="value"/>, 1 if key of <paramref name="x"/> is greater than <paramref name="value"/>, 0 if key of <paramref name="x"/> is equal to <paramref name="value"/></returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.KeysData.KeysData`1">
            <summary>
            Keys data
            </summary>
            <typeparam name="T">Type of items</typeparam>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`1.Compare(`0,`0)">
            <summary>
            Compare items
            </summary>
            <param name="x">Item to compare</param>
            <param name="y">Item to compare</param>
            <returns>Compare result: -1 if <paramref name="x"/> is less than <paramref name="y"/>, 1 if <paramref name="x"/> is greater than <paramref name="y"/>, 0 if <paramref name="x"/> is equal to <paramref name="y"/></returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.KeysData.KeysData`2">
            <summary>
            Keys data
            </summary>
            <typeparam name="T">Type of items</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.KeysData.KeysData`2.Key1Data">
            <summary>
            Key1 data
            </summary>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`2.#ctor(WojciechMikołajewicz.SortedList.KeyData{`0,`1}@)">
            <summary>
            Constructor
            </summary>
            <param name="key1Data">Key1 data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`2.Compare(`0,`0)">
            <summary>
            Compare items
            </summary>
            <param name="x">Item to compare</param>
            <param name="y">Item to compare</param>
            <returns>Compare result: -1 if <paramref name="x"/> is less than <paramref name="y"/>, 1 if <paramref name="x"/> is greater than <paramref name="y"/>, 0 if <paramref name="x"/> is equal to <paramref name="y"/></returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`2.Compare(`0,`1)">
            <summary>
            Compare item with keys values
            </summary>
            <param name="item">Item to compare</param>
            <param name="key1">Key1 to compare</param>
            <returns>Compare result: -1 if <paramref name="item"/> is less than keys, 1 if <paramref name="item"/> is greater than keys, 0 if <paramref name="item"/> is equal to keys</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.KeysData.KeysData`3">
            <summary>
            Keys data
            </summary>
            <typeparam name="T">Type of items</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.KeysData.KeysData`3.Key2Data">
            <summary>
            Key2 data
            </summary>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`3.#ctor(WojciechMikołajewicz.SortedList.KeyData{`0,`1}@,WojciechMikołajewicz.SortedList.KeyData{`0,`2}@)">
            <summary>
            Constructor
            </summary>
            <param name="key1Data">Key1 data</param>
            <param name="key2Data">Key2 data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`3.Compare(`0,`0)">
            <summary>
            Compare items
            </summary>
            <param name="x">Item to compare</param>
            <param name="y">Item to compare</param>
            <returns>Compare result: -1 if <paramref name="x"/> is less than <paramref name="y"/>, 1 if <paramref name="x"/> is greater than <paramref name="y"/>, 0 if <paramref name="x"/> is equal to <paramref name="y"/></returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`3.Compare(`0,`1,`2)">
            <summary>
            Compare item with keys values
            </summary>
            <param name="item">Item to compare</param>
            <param name="key1">Key1 to compare</param>
            <param name="key2">Key2 to compare</param>
            <returns>Compare result: -1 if <paramref name="item"/> is less than keys, 1 if <paramref name="item"/> is greater than keys, 0 if <paramref name="item"/> is equal to keys</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.KeysData.KeysData`4">
            <summary>
            Keys data
            </summary>
            <typeparam name="T">Type of items</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.KeysData.KeysData`4.Key3Data">
            <summary>
            Key3 data
            </summary>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`4.#ctor(WojciechMikołajewicz.SortedList.KeyData{`0,`1}@,WojciechMikołajewicz.SortedList.KeyData{`0,`2}@,WojciechMikołajewicz.SortedList.KeyData{`0,`3}@)">
            <summary>
            Constructor
            </summary>
            <param name="key1Data">Key1 data</param>
            <param name="key2Data">Key2 data</param>
            <param name="key3Data">Key3 data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`4.Compare(`0,`0)">
            <summary>
            Compare items
            </summary>
            <param name="x">Item to compare</param>
            <param name="y">Item to compare</param>
            <returns>Compare result: -1 if <paramref name="x"/> is less than <paramref name="y"/>, 1 if <paramref name="x"/> is greater than <paramref name="y"/>, 0 if <paramref name="x"/> is equal to <paramref name="y"/></returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`4.Compare(`0,`1,`2,`3)">
            <summary>
            Compare item with keys values
            </summary>
            <param name="item">Item to compare</param>
            <param name="key1">Key1 to compare</param>
            <param name="key2">Key2 to compare</param>
            <param name="key3">Key3 to compare</param>
            <returns>Compare result: -1 if <paramref name="item"/> is less than keys, 1 if <paramref name="item"/> is greater than keys, 0 if <paramref name="item"/> is equal to keys</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.KeysData.KeysData`5">
            <summary>
            Keys data
            </summary>
            <typeparam name="T">Type of items</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
            <typeparam name="K4">Key4 type</typeparam>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.KeysData.KeysData`5.Key4Data">
            <summary>
            Key4 data
            </summary>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`5.#ctor(WojciechMikołajewicz.SortedList.KeyData{`0,`1}@,WojciechMikołajewicz.SortedList.KeyData{`0,`2}@,WojciechMikołajewicz.SortedList.KeyData{`0,`3}@,WojciechMikołajewicz.SortedList.KeyData{`0,`4}@)">
            <summary>
            Constructor
            </summary>
            <param name="key1Data">Key1 data</param>
            <param name="key2Data">Key2 data</param>
            <param name="key3Data">Key3 data</param>
            <param name="key4Data">Key4 data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`5.Compare(`0,`0)">
            <summary>
            Compare items
            </summary>
            <param name="x">Item to compare</param>
            <param name="y">Item to compare</param>
            <returns>Compare result: -1 if <paramref name="x"/> is less than <paramref name="y"/>, 1 if <paramref name="x"/> is greater than <paramref name="y"/>, 0 if <paramref name="x"/> is equal to <paramref name="y"/></returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`5.Compare(`0,`1,`2,`3,`4)">
            <summary>
            Compare item with keys values
            </summary>
            <param name="item">Item to compare</param>
            <param name="key1">Key1 to compare</param>
            <param name="key2">Key2 to compare</param>
            <param name="key3">Key3 to compare</param>
            <param name="key4">Key4 to compare</param>
            <returns>Compare result: -1 if <paramref name="item"/> is less than keys, 1 if <paramref name="item"/> is greater than keys, 0 if <paramref name="item"/> is equal to keys</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.KeysData.KeysData`6">
            <summary>
            Keys data
            </summary>
            <typeparam name="T">Type of items</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
            <typeparam name="K4">Key4 type</typeparam>
            <typeparam name="K5">Key5 type</typeparam>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.KeysData.KeysData`6.Key5Data">
            <summary>
            Key5 data
            </summary>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`6.#ctor(WojciechMikołajewicz.SortedList.KeyData{`0,`1}@,WojciechMikołajewicz.SortedList.KeyData{`0,`2}@,WojciechMikołajewicz.SortedList.KeyData{`0,`3}@,WojciechMikołajewicz.SortedList.KeyData{`0,`4}@,WojciechMikołajewicz.SortedList.KeyData{`0,`5}@)">
            <summary>
            Constructor
            </summary>
            <param name="key1Data">Key1 data</param>
            <param name="key2Data">Key2 data</param>
            <param name="key3Data">Key3 data</param>
            <param name="key4Data">Key4 data</param>
            <param name="key5Data">Key5 data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`6.Compare(`0,`0)">
            <summary>
            Compare items
            </summary>
            <param name="x">Item to compare</param>
            <param name="y">Item to compare</param>
            <returns>Compare result: -1 if <paramref name="x"/> is less than <paramref name="y"/>, 1 if <paramref name="x"/> is greater than <paramref name="y"/>, 0 if <paramref name="x"/> is equal to <paramref name="y"/></returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`6.Compare(`0,`1,`2,`3,`4,`5)">
            <summary>
            Compare item with keys values
            </summary>
            <param name="item">Item to compare</param>
            <param name="key1">Key1 to compare</param>
            <param name="key2">Key2 to compare</param>
            <param name="key3">Key3 to compare</param>
            <param name="key4">Key4 to compare</param>
            <param name="key5">Key5 to compare</param>
            <returns>Compare result: -1 if <paramref name="item"/> is less than keys, 1 if <paramref name="item"/> is greater than keys, 0 if <paramref name="item"/> is equal to keys</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.KeysData.KeysData`7">
            <summary>
            Keys data
            </summary>
            <typeparam name="T">Type of items</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
            <typeparam name="K4">Key4 type</typeparam>
            <typeparam name="K5">Key5 type</typeparam>
            <typeparam name="K6">Key6 type</typeparam>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.KeysData.KeysData`7.Key6Data">
            <summary>
            Key6 data
            </summary>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`7.#ctor(WojciechMikołajewicz.SortedList.KeyData{`0,`1}@,WojciechMikołajewicz.SortedList.KeyData{`0,`2}@,WojciechMikołajewicz.SortedList.KeyData{`0,`3}@,WojciechMikołajewicz.SortedList.KeyData{`0,`4}@,WojciechMikołajewicz.SortedList.KeyData{`0,`5}@,WojciechMikołajewicz.SortedList.KeyData{`0,`6}@)">
            <summary>
            Constructor
            </summary>
            <param name="key1Data">Key1 data</param>
            <param name="key2Data">Key2 data</param>
            <param name="key3Data">Key3 data</param>
            <param name="key4Data">Key4 data</param>
            <param name="key5Data">Key5 data</param>
            <param name="key6Data">Key6 data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`7.Compare(`0,`0)">
            <summary>
            Compare items
            </summary>
            <param name="x">Item to compare</param>
            <param name="y">Item to compare</param>
            <returns>Compare result: -1 if <paramref name="x"/> is less than <paramref name="y"/>, 1 if <paramref name="x"/> is greater than <paramref name="y"/>, 0 if <paramref name="x"/> is equal to <paramref name="y"/></returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`7.Compare(`0,`1,`2,`3,`4,`5,`6)">
            <summary>
            Compare item with keys values
            </summary>
            <param name="item">Item to compare</param>
            <param name="key1">Key1 to compare</param>
            <param name="key2">Key2 to compare</param>
            <param name="key3">Key3 to compare</param>
            <param name="key4">Key4 to compare</param>
            <param name="key5">Key5 to compare</param>
            <param name="key6">Key6 to compare</param>
            <returns>Compare result: -1 if <paramref name="item"/> is less than keys, 1 if <paramref name="item"/> is greater than keys, 0 if <paramref name="item"/> is equal to keys</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.KeysData.KeysData`8">
            <summary>
            Keys data
            </summary>
            <typeparam name="T">Type of items</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
            <typeparam name="K4">Key4 type</typeparam>
            <typeparam name="K5">Key5 type</typeparam>
            <typeparam name="K6">Key6 type</typeparam>
            <typeparam name="K7">Key7 type</typeparam>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.KeysData.KeysData`8.Key7Data">
            <summary>
            Key7 data
            </summary>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`8.#ctor(WojciechMikołajewicz.SortedList.KeyData{`0,`1}@,WojciechMikołajewicz.SortedList.KeyData{`0,`2}@,WojciechMikołajewicz.SortedList.KeyData{`0,`3}@,WojciechMikołajewicz.SortedList.KeyData{`0,`4}@,WojciechMikołajewicz.SortedList.KeyData{`0,`5}@,WojciechMikołajewicz.SortedList.KeyData{`0,`6}@,WojciechMikołajewicz.SortedList.KeyData{`0,`7}@)">
            <summary>
            Constructor
            </summary>
            <param name="key1Data">Key1 data</param>
            <param name="key2Data">Key2 data</param>
            <param name="key3Data">Key3 data</param>
            <param name="key4Data">Key4 data</param>
            <param name="key5Data">Key5 data</param>
            <param name="key6Data">Key6 data</param>
            <param name="key7Data">Key7 data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`8.Compare(`0,`0)">
            <summary>
            Compare items
            </summary>
            <param name="x">Item to compare</param>
            <param name="y">Item to compare</param>
            <returns>Compare result: -1 if <paramref name="x"/> is less than <paramref name="y"/>, 1 if <paramref name="x"/> is greater than <paramref name="y"/>, 0 if <paramref name="x"/> is equal to <paramref name="y"/></returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`8.Compare(`0,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Compare item with keys values
            </summary>
            <param name="item">Item to compare</param>
            <param name="key1">Key1 to compare</param>
            <param name="key2">Key2 to compare</param>
            <param name="key3">Key3 to compare</param>
            <param name="key4">Key4 to compare</param>
            <param name="key5">Key5 to compare</param>
            <param name="key6">Key6 to compare</param>
            <param name="key7">Key7 to compare</param>
            <returns>Compare result: -1 if <paramref name="item"/> is less than keys, 1 if <paramref name="item"/> is greater than keys, 0 if <paramref name="item"/> is equal to keys</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.KeysData.KeysData`9">
            <summary>
            Keys data
            </summary>
            <typeparam name="T">Type of items</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
            <typeparam name="K4">Key4 type</typeparam>
            <typeparam name="K5">Key5 type</typeparam>
            <typeparam name="K6">Key6 type</typeparam>
            <typeparam name="K7">Key7 type</typeparam>
            <typeparam name="K8">Key8 type</typeparam>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.KeysData.KeysData`9.Key8Data">
            <summary>
            Key8 data
            </summary>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`9.#ctor(WojciechMikołajewicz.SortedList.KeyData{`0,`1}@,WojciechMikołajewicz.SortedList.KeyData{`0,`2}@,WojciechMikołajewicz.SortedList.KeyData{`0,`3}@,WojciechMikołajewicz.SortedList.KeyData{`0,`4}@,WojciechMikołajewicz.SortedList.KeyData{`0,`5}@,WojciechMikołajewicz.SortedList.KeyData{`0,`6}@,WojciechMikołajewicz.SortedList.KeyData{`0,`7}@,WojciechMikołajewicz.SortedList.KeyData{`0,`8}@)">
            <summary>
            Constructor
            </summary>
            <param name="key1Data">Key1 data</param>
            <param name="key2Data">Key2 data</param>
            <param name="key3Data">Key3 data</param>
            <param name="key4Data">Key4 data</param>
            <param name="key5Data">Key5 data</param>
            <param name="key6Data">Key6 data</param>
            <param name="key7Data">Key7 data</param>
            <param name="key8Data">Key8 data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`9.Compare(`0,`0)">
            <summary>
            Compare items
            </summary>
            <param name="x">Item to compare</param>
            <param name="y">Item to compare</param>
            <returns>Compare result: -1 if <paramref name="x"/> is less than <paramref name="y"/>, 1 if <paramref name="x"/> is greater than <paramref name="y"/>, 0 if <paramref name="x"/> is equal to <paramref name="y"/></returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`9.Compare(`0,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Compare item with keys values
            </summary>
            <param name="item">Item to compare</param>
            <param name="key1">Key1 to compare</param>
            <param name="key2">Key2 to compare</param>
            <param name="key3">Key3 to compare</param>
            <param name="key4">Key4 to compare</param>
            <param name="key5">Key5 to compare</param>
            <param name="key6">Key6 to compare</param>
            <param name="key7">Key7 to compare</param>
            <param name="key8">Key8 to compare</param>
            <returns>Compare result: -1 if <paramref name="item"/> is less than keys, 1 if <paramref name="item"/> is greater than keys, 0 if <paramref name="item"/> is equal to keys</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.KeysData.KeysData`10">
            <summary>
            Keys data
            </summary>
            <typeparam name="T">Type of items</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
            <typeparam name="K4">Key4 type</typeparam>
            <typeparam name="K5">Key5 type</typeparam>
            <typeparam name="K6">Key6 type</typeparam>
            <typeparam name="K7">Key7 type</typeparam>
            <typeparam name="K8">Key8 type</typeparam>
            <typeparam name="K9">Key9 type</typeparam>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.KeysData.KeysData`10.Key9Data">
            <summary>
            Key9 data
            </summary>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`10.#ctor(WojciechMikołajewicz.SortedList.KeyData{`0,`1}@,WojciechMikołajewicz.SortedList.KeyData{`0,`2}@,WojciechMikołajewicz.SortedList.KeyData{`0,`3}@,WojciechMikołajewicz.SortedList.KeyData{`0,`4}@,WojciechMikołajewicz.SortedList.KeyData{`0,`5}@,WojciechMikołajewicz.SortedList.KeyData{`0,`6}@,WojciechMikołajewicz.SortedList.KeyData{`0,`7}@,WojciechMikołajewicz.SortedList.KeyData{`0,`8}@,WojciechMikołajewicz.SortedList.KeyData{`0,`9}@)">
            <summary>
            Constructor
            </summary>
            <param name="key1Data">Key1 data</param>
            <param name="key2Data">Key2 data</param>
            <param name="key3Data">Key3 data</param>
            <param name="key4Data">Key4 data</param>
            <param name="key5Data">Key5 data</param>
            <param name="key6Data">Key6 data</param>
            <param name="key7Data">Key7 data</param>
            <param name="key8Data">Key8 data</param>
            <param name="key9Data">Key9 data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`10.Compare(`0,`0)">
            <summary>
            Compare items
            </summary>
            <param name="x">Item to compare</param>
            <param name="y">Item to compare</param>
            <returns>Compare result: -1 if <paramref name="x"/> is less than <paramref name="y"/>, 1 if <paramref name="x"/> is greater than <paramref name="y"/>, 0 if <paramref name="x"/> is equal to <paramref name="y"/></returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`10.Compare(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Compare item with keys values
            </summary>
            <param name="item">Item to compare</param>
            <param name="key1">Key1 to compare</param>
            <param name="key2">Key2 to compare</param>
            <param name="key3">Key3 to compare</param>
            <param name="key4">Key4 to compare</param>
            <param name="key5">Key5 to compare</param>
            <param name="key6">Key6 to compare</param>
            <param name="key7">Key7 to compare</param>
            <param name="key8">Key8 to compare</param>
            <param name="key9">Key9 to compare</param>
            <returns>Compare result: -1 if <paramref name="item"/> is less than keys, 1 if <paramref name="item"/> is greater than keys, 0 if <paramref name="item"/> is equal to keys</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.KeysData.KeysData`11">
            <summary>
            Keys data
            </summary>
            <typeparam name="T">Type of items</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
            <typeparam name="K4">Key4 type</typeparam>
            <typeparam name="K5">Key5 type</typeparam>
            <typeparam name="K6">Key6 type</typeparam>
            <typeparam name="K7">Key7 type</typeparam>
            <typeparam name="K8">Key8 type</typeparam>
            <typeparam name="K9">Key9 type</typeparam>
            <typeparam name="K10">Key10 type</typeparam>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.KeysData.KeysData`11.Key10Data">
            <summary>
            Key10 data
            </summary>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`11.#ctor(WojciechMikołajewicz.SortedList.KeyData{`0,`1}@,WojciechMikołajewicz.SortedList.KeyData{`0,`2}@,WojciechMikołajewicz.SortedList.KeyData{`0,`3}@,WojciechMikołajewicz.SortedList.KeyData{`0,`4}@,WojciechMikołajewicz.SortedList.KeyData{`0,`5}@,WojciechMikołajewicz.SortedList.KeyData{`0,`6}@,WojciechMikołajewicz.SortedList.KeyData{`0,`7}@,WojciechMikołajewicz.SortedList.KeyData{`0,`8}@,WojciechMikołajewicz.SortedList.KeyData{`0,`9}@,WojciechMikołajewicz.SortedList.KeyData{`0,`10}@)">
            <summary>
            Constructor
            </summary>
            <param name="key1Data">Key1 data</param>
            <param name="key2Data">Key2 data</param>
            <param name="key3Data">Key3 data</param>
            <param name="key4Data">Key4 data</param>
            <param name="key5Data">Key5 data</param>
            <param name="key6Data">Key6 data</param>
            <param name="key7Data">Key7 data</param>
            <param name="key8Data">Key8 data</param>
            <param name="key9Data">Key9 data</param>
            <param name="key10Data">Key10 data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`11.Compare(`0,`0)">
            <summary>
            Compare items
            </summary>
            <param name="x">Item to compare</param>
            <param name="y">Item to compare</param>
            <returns>Compare result: -1 if <paramref name="x"/> is less than <paramref name="y"/>, 1 if <paramref name="x"/> is greater than <paramref name="y"/>, 0 if <paramref name="x"/> is equal to <paramref name="y"/></returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`11.Compare(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Compare item with keys values
            </summary>
            <param name="item">Item to compare</param>
            <param name="key1">Key1 to compare</param>
            <param name="key2">Key2 to compare</param>
            <param name="key3">Key3 to compare</param>
            <param name="key4">Key4 to compare</param>
            <param name="key5">Key5 to compare</param>
            <param name="key6">Key6 to compare</param>
            <param name="key7">Key7 to compare</param>
            <param name="key8">Key8 to compare</param>
            <param name="key9">Key9 to compare</param>
            <param name="key10">Key10 to compare</param>
            <returns>Compare result: -1 if <paramref name="item"/> is less than keys, 1 if <paramref name="item"/> is greater than keys, 0 if <paramref name="item"/> is equal to keys</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.KeysData.KeysData`12">
            <summary>
            Keys data
            </summary>
            <typeparam name="T">Type of items</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
            <typeparam name="K4">Key4 type</typeparam>
            <typeparam name="K5">Key5 type</typeparam>
            <typeparam name="K6">Key6 type</typeparam>
            <typeparam name="K7">Key7 type</typeparam>
            <typeparam name="K8">Key8 type</typeparam>
            <typeparam name="K9">Key9 type</typeparam>
            <typeparam name="K10">Key10 type</typeparam>
            <typeparam name="K11">Key11 type</typeparam>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.KeysData.KeysData`12.Key11Data">
            <summary>
            Key11 data
            </summary>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`12.#ctor(WojciechMikołajewicz.SortedList.KeyData{`0,`1}@,WojciechMikołajewicz.SortedList.KeyData{`0,`2}@,WojciechMikołajewicz.SortedList.KeyData{`0,`3}@,WojciechMikołajewicz.SortedList.KeyData{`0,`4}@,WojciechMikołajewicz.SortedList.KeyData{`0,`5}@,WojciechMikołajewicz.SortedList.KeyData{`0,`6}@,WojciechMikołajewicz.SortedList.KeyData{`0,`7}@,WojciechMikołajewicz.SortedList.KeyData{`0,`8}@,WojciechMikołajewicz.SortedList.KeyData{`0,`9}@,WojciechMikołajewicz.SortedList.KeyData{`0,`10}@,WojciechMikołajewicz.SortedList.KeyData{`0,`11}@)">
            <summary>
            Constructor
            </summary>
            <param name="key1Data">Key1 data</param>
            <param name="key2Data">Key2 data</param>
            <param name="key3Data">Key3 data</param>
            <param name="key4Data">Key4 data</param>
            <param name="key5Data">Key5 data</param>
            <param name="key6Data">Key6 data</param>
            <param name="key7Data">Key7 data</param>
            <param name="key8Data">Key8 data</param>
            <param name="key9Data">Key9 data</param>
            <param name="key10Data">Key10 data</param>
            <param name="key11Data">Key11 data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`12.Compare(`0,`0)">
            <summary>
            Compare items
            </summary>
            <param name="x">Item to compare</param>
            <param name="y">Item to compare</param>
            <returns>Compare result: -1 if <paramref name="x"/> is less than <paramref name="y"/>, 1 if <paramref name="x"/> is greater than <paramref name="y"/>, 0 if <paramref name="x"/> is equal to <paramref name="y"/></returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`12.Compare(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Compare item with keys values
            </summary>
            <param name="item">Item to compare</param>
            <param name="key1">Key1 to compare</param>
            <param name="key2">Key2 to compare</param>
            <param name="key3">Key3 to compare</param>
            <param name="key4">Key4 to compare</param>
            <param name="key5">Key5 to compare</param>
            <param name="key6">Key6 to compare</param>
            <param name="key7">Key7 to compare</param>
            <param name="key8">Key8 to compare</param>
            <param name="key9">Key9 to compare</param>
            <param name="key10">Key10 to compare</param>
            <param name="key11">Key11 to compare</param>
            <returns>Compare result: -1 if <paramref name="item"/> is less than keys, 1 if <paramref name="item"/> is greater than keys, 0 if <paramref name="item"/> is equal to keys</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.KeysData.KeysData`13">
            <summary>
            Keys data
            </summary>
            <typeparam name="T">Type of items</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
            <typeparam name="K4">Key4 type</typeparam>
            <typeparam name="K5">Key5 type</typeparam>
            <typeparam name="K6">Key6 type</typeparam>
            <typeparam name="K7">Key7 type</typeparam>
            <typeparam name="K8">Key8 type</typeparam>
            <typeparam name="K9">Key9 type</typeparam>
            <typeparam name="K10">Key10 type</typeparam>
            <typeparam name="K11">Key11 type</typeparam>
            <typeparam name="K12">Key12 type</typeparam>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.KeysData.KeysData`13.Key12Data">
            <summary>
            Key12 data
            </summary>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`13.#ctor(WojciechMikołajewicz.SortedList.KeyData{`0,`1}@,WojciechMikołajewicz.SortedList.KeyData{`0,`2}@,WojciechMikołajewicz.SortedList.KeyData{`0,`3}@,WojciechMikołajewicz.SortedList.KeyData{`0,`4}@,WojciechMikołajewicz.SortedList.KeyData{`0,`5}@,WojciechMikołajewicz.SortedList.KeyData{`0,`6}@,WojciechMikołajewicz.SortedList.KeyData{`0,`7}@,WojciechMikołajewicz.SortedList.KeyData{`0,`8}@,WojciechMikołajewicz.SortedList.KeyData{`0,`9}@,WojciechMikołajewicz.SortedList.KeyData{`0,`10}@,WojciechMikołajewicz.SortedList.KeyData{`0,`11}@,WojciechMikołajewicz.SortedList.KeyData{`0,`12}@)">
            <summary>
            Constructor
            </summary>
            <param name="key1Data">Key1 data</param>
            <param name="key2Data">Key2 data</param>
            <param name="key3Data">Key3 data</param>
            <param name="key4Data">Key4 data</param>
            <param name="key5Data">Key5 data</param>
            <param name="key6Data">Key6 data</param>
            <param name="key7Data">Key7 data</param>
            <param name="key8Data">Key8 data</param>
            <param name="key9Data">Key9 data</param>
            <param name="key10Data">Key10 data</param>
            <param name="key11Data">Key11 data</param>
            <param name="key12Data">Key12 data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`13.Compare(`0,`0)">
            <summary>
            Compare items
            </summary>
            <param name="x">Item to compare</param>
            <param name="y">Item to compare</param>
            <returns>Compare result: -1 if <paramref name="x"/> is less than <paramref name="y"/>, 1 if <paramref name="x"/> is greater than <paramref name="y"/>, 0 if <paramref name="x"/> is equal to <paramref name="y"/></returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`13.Compare(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Compare item with keys values
            </summary>
            <param name="item">Item to compare</param>
            <param name="key1">Key1 to compare</param>
            <param name="key2">Key2 to compare</param>
            <param name="key3">Key3 to compare</param>
            <param name="key4">Key4 to compare</param>
            <param name="key5">Key5 to compare</param>
            <param name="key6">Key6 to compare</param>
            <param name="key7">Key7 to compare</param>
            <param name="key8">Key8 to compare</param>
            <param name="key9">Key9 to compare</param>
            <param name="key10">Key10 to compare</param>
            <param name="key11">Key11 to compare</param>
            <param name="key12">Key12 to compare</param>
            <returns>Compare result: -1 if <paramref name="item"/> is less than keys, 1 if <paramref name="item"/> is greater than keys, 0 if <paramref name="item"/> is equal to keys</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.KeysData.KeysData`14">
            <summary>
            Keys data
            </summary>
            <typeparam name="T">Type of items</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
            <typeparam name="K4">Key4 type</typeparam>
            <typeparam name="K5">Key5 type</typeparam>
            <typeparam name="K6">Key6 type</typeparam>
            <typeparam name="K7">Key7 type</typeparam>
            <typeparam name="K8">Key8 type</typeparam>
            <typeparam name="K9">Key9 type</typeparam>
            <typeparam name="K10">Key10 type</typeparam>
            <typeparam name="K11">Key11 type</typeparam>
            <typeparam name="K12">Key12 type</typeparam>
            <typeparam name="K13">Key13 type</typeparam>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.KeysData.KeysData`14.Key13Data">
            <summary>
            Key13 data
            </summary>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`14.#ctor(WojciechMikołajewicz.SortedList.KeyData{`0,`1}@,WojciechMikołajewicz.SortedList.KeyData{`0,`2}@,WojciechMikołajewicz.SortedList.KeyData{`0,`3}@,WojciechMikołajewicz.SortedList.KeyData{`0,`4}@,WojciechMikołajewicz.SortedList.KeyData{`0,`5}@,WojciechMikołajewicz.SortedList.KeyData{`0,`6}@,WojciechMikołajewicz.SortedList.KeyData{`0,`7}@,WojciechMikołajewicz.SortedList.KeyData{`0,`8}@,WojciechMikołajewicz.SortedList.KeyData{`0,`9}@,WojciechMikołajewicz.SortedList.KeyData{`0,`10}@,WojciechMikołajewicz.SortedList.KeyData{`0,`11}@,WojciechMikołajewicz.SortedList.KeyData{`0,`12}@,WojciechMikołajewicz.SortedList.KeyData{`0,`13}@)">
            <summary>
            Constructor
            </summary>
            <param name="key1Data">Key1 data</param>
            <param name="key2Data">Key2 data</param>
            <param name="key3Data">Key3 data</param>
            <param name="key4Data">Key4 data</param>
            <param name="key5Data">Key5 data</param>
            <param name="key6Data">Key6 data</param>
            <param name="key7Data">Key7 data</param>
            <param name="key8Data">Key8 data</param>
            <param name="key9Data">Key9 data</param>
            <param name="key10Data">Key10 data</param>
            <param name="key11Data">Key11 data</param>
            <param name="key12Data">Key12 data</param>
            <param name="key13Data">Key13 data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`14.Compare(`0,`0)">
            <summary>
            Compare items
            </summary>
            <param name="x">Item to compare</param>
            <param name="y">Item to compare</param>
            <returns>Compare result: -1 if <paramref name="x"/> is less than <paramref name="y"/>, 1 if <paramref name="x"/> is greater than <paramref name="y"/>, 0 if <paramref name="x"/> is equal to <paramref name="y"/></returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`14.Compare(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Compare item with keys values
            </summary>
            <param name="item">Item to compare</param>
            <param name="key1">Key1 to compare</param>
            <param name="key2">Key2 to compare</param>
            <param name="key3">Key3 to compare</param>
            <param name="key4">Key4 to compare</param>
            <param name="key5">Key5 to compare</param>
            <param name="key6">Key6 to compare</param>
            <param name="key7">Key7 to compare</param>
            <param name="key8">Key8 to compare</param>
            <param name="key9">Key9 to compare</param>
            <param name="key10">Key10 to compare</param>
            <param name="key11">Key11 to compare</param>
            <param name="key12">Key12 to compare</param>
            <param name="key13">Key13 to compare</param>
            <returns>Compare result: -1 if <paramref name="item"/> is less than keys, 1 if <paramref name="item"/> is greater than keys, 0 if <paramref name="item"/> is equal to keys</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.KeysData.KeysData`15">
            <summary>
            Keys data
            </summary>
            <typeparam name="T">Type of items</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
            <typeparam name="K4">Key4 type</typeparam>
            <typeparam name="K5">Key5 type</typeparam>
            <typeparam name="K6">Key6 type</typeparam>
            <typeparam name="K7">Key7 type</typeparam>
            <typeparam name="K8">Key8 type</typeparam>
            <typeparam name="K9">Key9 type</typeparam>
            <typeparam name="K10">Key10 type</typeparam>
            <typeparam name="K11">Key11 type</typeparam>
            <typeparam name="K12">Key12 type</typeparam>
            <typeparam name="K13">Key13 type</typeparam>
            <typeparam name="K14">Key14 type</typeparam>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.KeysData.KeysData`15.Key14Data">
            <summary>
            Key14 data
            </summary>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`15.#ctor(WojciechMikołajewicz.SortedList.KeyData{`0,`1}@,WojciechMikołajewicz.SortedList.KeyData{`0,`2}@,WojciechMikołajewicz.SortedList.KeyData{`0,`3}@,WojciechMikołajewicz.SortedList.KeyData{`0,`4}@,WojciechMikołajewicz.SortedList.KeyData{`0,`5}@,WojciechMikołajewicz.SortedList.KeyData{`0,`6}@,WojciechMikołajewicz.SortedList.KeyData{`0,`7}@,WojciechMikołajewicz.SortedList.KeyData{`0,`8}@,WojciechMikołajewicz.SortedList.KeyData{`0,`9}@,WojciechMikołajewicz.SortedList.KeyData{`0,`10}@,WojciechMikołajewicz.SortedList.KeyData{`0,`11}@,WojciechMikołajewicz.SortedList.KeyData{`0,`12}@,WojciechMikołajewicz.SortedList.KeyData{`0,`13}@,WojciechMikołajewicz.SortedList.KeyData{`0,`14}@)">
            <summary>
            Constructor
            </summary>
            <param name="key1Data">Key1 data</param>
            <param name="key2Data">Key2 data</param>
            <param name="key3Data">Key3 data</param>
            <param name="key4Data">Key4 data</param>
            <param name="key5Data">Key5 data</param>
            <param name="key6Data">Key6 data</param>
            <param name="key7Data">Key7 data</param>
            <param name="key8Data">Key8 data</param>
            <param name="key9Data">Key9 data</param>
            <param name="key10Data">Key10 data</param>
            <param name="key11Data">Key11 data</param>
            <param name="key12Data">Key12 data</param>
            <param name="key13Data">Key13 data</param>
            <param name="key14Data">Key14 data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`15.Compare(`0,`0)">
            <summary>
            Compare items
            </summary>
            <param name="x">Item to compare</param>
            <param name="y">Item to compare</param>
            <returns>Compare result: -1 if <paramref name="x"/> is less than <paramref name="y"/>, 1 if <paramref name="x"/> is greater than <paramref name="y"/>, 0 if <paramref name="x"/> is equal to <paramref name="y"/></returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`15.Compare(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Compare item with keys values
            </summary>
            <param name="item">Item to compare</param>
            <param name="key1">Key1 to compare</param>
            <param name="key2">Key2 to compare</param>
            <param name="key3">Key3 to compare</param>
            <param name="key4">Key4 to compare</param>
            <param name="key5">Key5 to compare</param>
            <param name="key6">Key6 to compare</param>
            <param name="key7">Key7 to compare</param>
            <param name="key8">Key8 to compare</param>
            <param name="key9">Key9 to compare</param>
            <param name="key10">Key10 to compare</param>
            <param name="key11">Key11 to compare</param>
            <param name="key12">Key12 to compare</param>
            <param name="key13">Key13 to compare</param>
            <param name="key14">Key14 to compare</param>
            <returns>Compare result: -1 if <paramref name="item"/> is less than keys, 1 if <paramref name="item"/> is greater than keys, 0 if <paramref name="item"/> is equal to keys</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.KeysData.KeysData`16">
            <summary>
            Keys data
            </summary>
            <typeparam name="T">Type of items</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
            <typeparam name="K4">Key4 type</typeparam>
            <typeparam name="K5">Key5 type</typeparam>
            <typeparam name="K6">Key6 type</typeparam>
            <typeparam name="K7">Key7 type</typeparam>
            <typeparam name="K8">Key8 type</typeparam>
            <typeparam name="K9">Key9 type</typeparam>
            <typeparam name="K10">Key10 type</typeparam>
            <typeparam name="K11">Key11 type</typeparam>
            <typeparam name="K12">Key12 type</typeparam>
            <typeparam name="K13">Key13 type</typeparam>
            <typeparam name="K14">Key14 type</typeparam>
            <typeparam name="K15">Key15 type</typeparam>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.KeysData.KeysData`16.Key15Data">
            <summary>
            Key15 data
            </summary>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`16.#ctor(WojciechMikołajewicz.SortedList.KeyData{`0,`1}@,WojciechMikołajewicz.SortedList.KeyData{`0,`2}@,WojciechMikołajewicz.SortedList.KeyData{`0,`3}@,WojciechMikołajewicz.SortedList.KeyData{`0,`4}@,WojciechMikołajewicz.SortedList.KeyData{`0,`5}@,WojciechMikołajewicz.SortedList.KeyData{`0,`6}@,WojciechMikołajewicz.SortedList.KeyData{`0,`7}@,WojciechMikołajewicz.SortedList.KeyData{`0,`8}@,WojciechMikołajewicz.SortedList.KeyData{`0,`9}@,WojciechMikołajewicz.SortedList.KeyData{`0,`10}@,WojciechMikołajewicz.SortedList.KeyData{`0,`11}@,WojciechMikołajewicz.SortedList.KeyData{`0,`12}@,WojciechMikołajewicz.SortedList.KeyData{`0,`13}@,WojciechMikołajewicz.SortedList.KeyData{`0,`14}@,WojciechMikołajewicz.SortedList.KeyData{`0,`15}@)">
            <summary>
            Constructor
            </summary>
            <param name="key1Data">Key1 data</param>
            <param name="key2Data">Key2 data</param>
            <param name="key3Data">Key3 data</param>
            <param name="key4Data">Key4 data</param>
            <param name="key5Data">Key5 data</param>
            <param name="key6Data">Key6 data</param>
            <param name="key7Data">Key7 data</param>
            <param name="key8Data">Key8 data</param>
            <param name="key9Data">Key9 data</param>
            <param name="key10Data">Key10 data</param>
            <param name="key11Data">Key11 data</param>
            <param name="key12Data">Key12 data</param>
            <param name="key13Data">Key13 data</param>
            <param name="key14Data">Key14 data</param>
            <param name="key15Data">Key15 data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`16.Compare(`0,`0)">
            <summary>
            Compare items
            </summary>
            <param name="x">Item to compare</param>
            <param name="y">Item to compare</param>
            <returns>Compare result: -1 if <paramref name="x"/> is less than <paramref name="y"/>, 1 if <paramref name="x"/> is greater than <paramref name="y"/>, 0 if <paramref name="x"/> is equal to <paramref name="y"/></returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`16.Compare(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
            Compare item with keys values
            </summary>
            <param name="item">Item to compare</param>
            <param name="key1">Key1 to compare</param>
            <param name="key2">Key2 to compare</param>
            <param name="key3">Key3 to compare</param>
            <param name="key4">Key4 to compare</param>
            <param name="key5">Key5 to compare</param>
            <param name="key6">Key6 to compare</param>
            <param name="key7">Key7 to compare</param>
            <param name="key8">Key8 to compare</param>
            <param name="key9">Key9 to compare</param>
            <param name="key10">Key10 to compare</param>
            <param name="key11">Key11 to compare</param>
            <param name="key12">Key12 to compare</param>
            <param name="key13">Key13 to compare</param>
            <param name="key14">Key14 to compare</param>
            <param name="key15">Key15 to compare</param>
            <returns>Compare result: -1 if <paramref name="item"/> is less than keys, 1 if <paramref name="item"/> is greater than keys, 0 if <paramref name="item"/> is equal to keys</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.KeysData.KeysData`17">
            <summary>
            Keys data
            </summary>
            <typeparam name="T">Type of items</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
            <typeparam name="K4">Key4 type</typeparam>
            <typeparam name="K5">Key5 type</typeparam>
            <typeparam name="K6">Key6 type</typeparam>
            <typeparam name="K7">Key7 type</typeparam>
            <typeparam name="K8">Key8 type</typeparam>
            <typeparam name="K9">Key9 type</typeparam>
            <typeparam name="K10">Key10 type</typeparam>
            <typeparam name="K11">Key11 type</typeparam>
            <typeparam name="K12">Key12 type</typeparam>
            <typeparam name="K13">Key13 type</typeparam>
            <typeparam name="K14">Key14 type</typeparam>
            <typeparam name="K15">Key15 type</typeparam>
            <typeparam name="K16">Key16 type</typeparam>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.KeysData.KeysData`17.Key16Data">
            <summary>
            Key16 data
            </summary>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`17.#ctor(WojciechMikołajewicz.SortedList.KeyData{`0,`1}@,WojciechMikołajewicz.SortedList.KeyData{`0,`2}@,WojciechMikołajewicz.SortedList.KeyData{`0,`3}@,WojciechMikołajewicz.SortedList.KeyData{`0,`4}@,WojciechMikołajewicz.SortedList.KeyData{`0,`5}@,WojciechMikołajewicz.SortedList.KeyData{`0,`6}@,WojciechMikołajewicz.SortedList.KeyData{`0,`7}@,WojciechMikołajewicz.SortedList.KeyData{`0,`8}@,WojciechMikołajewicz.SortedList.KeyData{`0,`9}@,WojciechMikołajewicz.SortedList.KeyData{`0,`10}@,WojciechMikołajewicz.SortedList.KeyData{`0,`11}@,WojciechMikołajewicz.SortedList.KeyData{`0,`12}@,WojciechMikołajewicz.SortedList.KeyData{`0,`13}@,WojciechMikołajewicz.SortedList.KeyData{`0,`14}@,WojciechMikołajewicz.SortedList.KeyData{`0,`15}@,WojciechMikołajewicz.SortedList.KeyData{`0,`16}@)">
            <summary>
            Constructor
            </summary>
            <param name="key1Data">Key1 data</param>
            <param name="key2Data">Key2 data</param>
            <param name="key3Data">Key3 data</param>
            <param name="key4Data">Key4 data</param>
            <param name="key5Data">Key5 data</param>
            <param name="key6Data">Key6 data</param>
            <param name="key7Data">Key7 data</param>
            <param name="key8Data">Key8 data</param>
            <param name="key9Data">Key9 data</param>
            <param name="key10Data">Key10 data</param>
            <param name="key11Data">Key11 data</param>
            <param name="key12Data">Key12 data</param>
            <param name="key13Data">Key13 data</param>
            <param name="key14Data">Key14 data</param>
            <param name="key15Data">Key15 data</param>
            <param name="key16Data">Key16 data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`17.Compare(`0,`0)">
            <summary>
            Compare items
            </summary>
            <param name="x">Item to compare</param>
            <param name="y">Item to compare</param>
            <returns>Compare result: -1 if <paramref name="x"/> is less than <paramref name="y"/>, 1 if <paramref name="x"/> is greater than <paramref name="y"/>, 0 if <paramref name="x"/> is equal to <paramref name="y"/></returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.KeysData.KeysData`17.Compare(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16)">
            <summary>
            Compare item with keys values
            </summary>
            <param name="item">Item to compare</param>
            <param name="key1">Key1 to compare</param>
            <param name="key2">Key2 to compare</param>
            <param name="key3">Key3 to compare</param>
            <param name="key4">Key4 to compare</param>
            <param name="key5">Key5 to compare</param>
            <param name="key6">Key6 to compare</param>
            <param name="key7">Key7 to compare</param>
            <param name="key8">Key8 to compare</param>
            <param name="key9">Key9 to compare</param>
            <param name="key10">Key10 to compare</param>
            <param name="key11">Key11 to compare</param>
            <param name="key12">Key12 to compare</param>
            <param name="key13">Key13 to compare</param>
            <param name="key14">Key14 to compare</param>
            <param name="key15">Key15 to compare</param>
            <param name="key16">Key16 to compare</param>
            <returns>Compare result: -1 if <paramref name="item"/> is less than keys, 1 if <paramref name="item"/> is greater than keys, 0 if <paramref name="item"/> is equal to keys</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`2">
            <summary>
            Part of sorted read only list with binary search based on items compare (not items equality)
            </summary>
            <typeparam name="T">Items type</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`2.op_Implicit(WojciechMikołajewicz.SortedList.SortedReadOnlyList{`0,`1})~WojciechMikołajewicz.SortedList.SortedReadOnlyListRange{`0,`1}">
            <summary>
            Implicit cast operator
            </summary>
            <param name="orderedReadOnlyList">Sorted read only list</param>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`2.KeysData">
            <summary>
            Keys data
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`2.Memory">
            <summary>
            Memory of the part of source sorted read only list
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`2.Count">
            <summary>
            Number of items
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`2.IsEmpty">
            <summary>
            Is empty
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`2.Item(System.Int32)">
            <summary>
            Returns an item of <paramref name="index"/>
            </summary>
            <param name="index">Index of the item to return</param>
            <returns>Item of specified <paramref name="index"/></returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`2.#ctor(WojciechMikołajewicz.SortedList.SortedReadOnlyList{`0,`1},System.Range)">
            <summary>
            Constructor
            </summary>
            <param name="orderedList">Source sorted read only list</param>
            <param name="range">Range in the <paramref name="orderedList"/></param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`2.#ctor(WojciechMikołajewicz.SortedList.KeysData.KeysData{`0,`1},System.ReadOnlyMemory{`0})">
            <summary>
            Constructor
            </summary>
            <param name="keysData">Keys data</param>
            <param name="memory">Read only memory of sorted read only list</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`2.GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`2.ItemRef(System.Int32)">
            <summary>
            Gets a read-only reference to the element at the specified <paramref name="index"/> in the read-only list
            </summary>
            <param name="index">The zero-based index of the element to get a reference to</param>
            <returns>A read-only reference to the element at the specified <paramref name="index"/> in the read-only list</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`2.BinaryFindEqual(`1)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`2.BinaryFindLessOrEqual(`1)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`2.BinaryFindLess(`1)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`2.BinaryFindGreaterOrEqual(`1)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`2.BinaryFindGreater(`1)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`3">
            <summary>
            Part of sorted read only list with binary search based on items compare (not items equality)
            </summary>
            <typeparam name="T">Items type</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`3.op_Implicit(WojciechMikołajewicz.SortedList.SortedReadOnlyList{`0,`1,`2})~WojciechMikołajewicz.SortedList.SortedReadOnlyListRange{`0,`1,`2}">
            <summary>
            Implicit cast operator
            </summary>
            <param name="orderedReadOnlyList">Sorted read only list</param>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`3.KeysData">
            <summary>
            Keys data
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`3.Memory">
            <summary>
            Memory of the part of source sorted read only list
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`3.Count">
            <summary>
            Number of items
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`3.IsEmpty">
            <summary>
            Is empty
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`3.Item(System.Int32)">
            <summary>
            Returns an item of <paramref name="index"/>
            </summary>
            <param name="index">Index of the item to return</param>
            <returns>Item of specified <paramref name="index"/></returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`3.#ctor(WojciechMikołajewicz.SortedList.SortedReadOnlyList{`0,`1,`2},System.Range)">
            <summary>
            Constructor
            </summary>
            <param name="orderedList">Source sorted read only list</param>
            <param name="range">Range in the <paramref name="orderedList"/></param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`3.#ctor(WojciechMikołajewicz.SortedList.KeysData.KeysData{`0,`1,`2},System.ReadOnlyMemory{`0})">
            <summary>
            Constructor
            </summary>
            <param name="keysData">Keys data</param>
            <param name="memory">Read only memory of sorted read only list</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`3.GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`3.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`3.ItemRef(System.Int32)">
            <summary>
            Gets a read-only reference to the element at the specified <paramref name="index"/> in the read-only list
            </summary>
            <param name="index">The zero-based index of the element to get a reference to</param>
            <returns>A read-only reference to the element at the specified <paramref name="index"/> in the read-only list</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`3.BinaryFindEqual(`1)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`3.BinaryFindLessOrEqual(`1)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`3.BinaryFindLess(`1)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`3.BinaryFindGreaterOrEqual(`1)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`3.BinaryFindGreater(`1)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`3.BinaryFindEqual(`1,`2)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`3.BinaryFindLessOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`3.BinaryFindLess(`1,`2)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`3.BinaryFindGreaterOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`3.BinaryFindGreater(`1,`2)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`4">
            <summary>
            Part of sorted read only list with binary search based on items compare (not items equality)
            </summary>
            <typeparam name="T">Items type</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`4.op_Implicit(WojciechMikołajewicz.SortedList.SortedReadOnlyList{`0,`1,`2,`3})~WojciechMikołajewicz.SortedList.SortedReadOnlyListRange{`0,`1,`2,`3}">
            <summary>
            Implicit cast operator
            </summary>
            <param name="orderedReadOnlyList">Sorted read only list</param>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`4.KeysData">
            <summary>
            Keys data
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`4.Memory">
            <summary>
            Memory of the part of source sorted read only list
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`4.Count">
            <summary>
            Number of items
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`4.IsEmpty">
            <summary>
            Is empty
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`4.Item(System.Int32)">
            <summary>
            Returns an item of <paramref name="index"/>
            </summary>
            <param name="index">Index of the item to return</param>
            <returns>Item of specified <paramref name="index"/></returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`4.#ctor(WojciechMikołajewicz.SortedList.SortedReadOnlyList{`0,`1,`2,`3},System.Range)">
            <summary>
            Constructor
            </summary>
            <param name="orderedList">Source sorted read only list</param>
            <param name="range">Range in the <paramref name="orderedList"/></param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`4.#ctor(WojciechMikołajewicz.SortedList.KeysData.KeysData{`0,`1,`2,`3},System.ReadOnlyMemory{`0})">
            <summary>
            Constructor
            </summary>
            <param name="keysData">Keys data</param>
            <param name="memory">Read only memory of sorted read only list</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`4.GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`4.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`4.ItemRef(System.Int32)">
            <summary>
            Gets a read-only reference to the element at the specified <paramref name="index"/> in the read-only list
            </summary>
            <param name="index">The zero-based index of the element to get a reference to</param>
            <returns>A read-only reference to the element at the specified <paramref name="index"/> in the read-only list</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`4.BinaryFindEqual(`1)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`4.BinaryFindLessOrEqual(`1)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`4.BinaryFindLess(`1)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`4.BinaryFindGreaterOrEqual(`1)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`4.BinaryFindGreater(`1)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`4.BinaryFindEqual(`1,`2)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`4.BinaryFindLessOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`4.BinaryFindLess(`1,`2)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`4.BinaryFindGreaterOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`4.BinaryFindGreater(`1,`2)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`4.BinaryFindEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`4.BinaryFindLessOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`4.BinaryFindLess(`1,`2,`3)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`4.BinaryFindGreaterOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`4.BinaryFindGreater(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`5">
            <summary>
            Part of sorted read only list with binary search based on items compare (not items equality)
            </summary>
            <typeparam name="T">Items type</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
            <typeparam name="K4">Key4 type</typeparam>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`5.op_Implicit(WojciechMikołajewicz.SortedList.SortedReadOnlyList{`0,`1,`2,`3,`4})~WojciechMikołajewicz.SortedList.SortedReadOnlyListRange{`0,`1,`2,`3,`4}">
            <summary>
            Implicit cast operator
            </summary>
            <param name="orderedReadOnlyList">Sorted read only list</param>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`5.KeysData">
            <summary>
            Keys data
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`5.Memory">
            <summary>
            Memory of the part of source sorted read only list
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`5.Count">
            <summary>
            Number of items
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`5.IsEmpty">
            <summary>
            Is empty
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`5.Item(System.Int32)">
            <summary>
            Returns an item of <paramref name="index"/>
            </summary>
            <param name="index">Index of the item to return</param>
            <returns>Item of specified <paramref name="index"/></returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`5.#ctor(WojciechMikołajewicz.SortedList.SortedReadOnlyList{`0,`1,`2,`3,`4},System.Range)">
            <summary>
            Constructor
            </summary>
            <param name="orderedList">Source sorted read only list</param>
            <param name="range">Range in the <paramref name="orderedList"/></param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`5.#ctor(WojciechMikołajewicz.SortedList.KeysData.KeysData{`0,`1,`2,`3,`4},System.ReadOnlyMemory{`0})">
            <summary>
            Constructor
            </summary>
            <param name="keysData">Keys data</param>
            <param name="memory">Read only memory of sorted read only list</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`5.GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`5.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`5.ItemRef(System.Int32)">
            <summary>
            Gets a read-only reference to the element at the specified <paramref name="index"/> in the read-only list
            </summary>
            <param name="index">The zero-based index of the element to get a reference to</param>
            <returns>A read-only reference to the element at the specified <paramref name="index"/> in the read-only list</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`5.BinaryFindEqual(`1)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`5.BinaryFindLessOrEqual(`1)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`5.BinaryFindLess(`1)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`5.BinaryFindGreaterOrEqual(`1)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`5.BinaryFindGreater(`1)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`5.BinaryFindEqual(`1,`2)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`5.BinaryFindLessOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`5.BinaryFindLess(`1,`2)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`5.BinaryFindGreaterOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`5.BinaryFindGreater(`1,`2)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`5.BinaryFindEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`5.BinaryFindLessOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`5.BinaryFindLess(`1,`2,`3)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`5.BinaryFindGreaterOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`5.BinaryFindGreater(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`5.BinaryFindEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`5.BinaryFindLessOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`5.BinaryFindLess(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`5.BinaryFindGreaterOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`5.BinaryFindGreater(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`6">
            <summary>
            Part of sorted read only list with binary search based on items compare (not items equality)
            </summary>
            <typeparam name="T">Items type</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
            <typeparam name="K4">Key4 type</typeparam>
            <typeparam name="K5">Key5 type</typeparam>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`6.op_Implicit(WojciechMikołajewicz.SortedList.SortedReadOnlyList{`0,`1,`2,`3,`4,`5})~WojciechMikołajewicz.SortedList.SortedReadOnlyListRange{`0,`1,`2,`3,`4,`5}">
            <summary>
            Implicit cast operator
            </summary>
            <param name="orderedReadOnlyList">Sorted read only list</param>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`6.KeysData">
            <summary>
            Keys data
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`6.Memory">
            <summary>
            Memory of the part of source sorted read only list
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`6.Count">
            <summary>
            Number of items
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`6.IsEmpty">
            <summary>
            Is empty
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`6.Item(System.Int32)">
            <summary>
            Returns an item of <paramref name="index"/>
            </summary>
            <param name="index">Index of the item to return</param>
            <returns>Item of specified <paramref name="index"/></returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`6.#ctor(WojciechMikołajewicz.SortedList.SortedReadOnlyList{`0,`1,`2,`3,`4,`5},System.Range)">
            <summary>
            Constructor
            </summary>
            <param name="orderedList">Source sorted read only list</param>
            <param name="range">Range in the <paramref name="orderedList"/></param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`6.#ctor(WojciechMikołajewicz.SortedList.KeysData.KeysData{`0,`1,`2,`3,`4,`5},System.ReadOnlyMemory{`0})">
            <summary>
            Constructor
            </summary>
            <param name="keysData">Keys data</param>
            <param name="memory">Read only memory of sorted read only list</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`6.GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`6.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`6.ItemRef(System.Int32)">
            <summary>
            Gets a read-only reference to the element at the specified <paramref name="index"/> in the read-only list
            </summary>
            <param name="index">The zero-based index of the element to get a reference to</param>
            <returns>A read-only reference to the element at the specified <paramref name="index"/> in the read-only list</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`6.BinaryFindEqual(`1)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`6.BinaryFindLessOrEqual(`1)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`6.BinaryFindLess(`1)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`6.BinaryFindGreaterOrEqual(`1)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`6.BinaryFindGreater(`1)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`6.BinaryFindEqual(`1,`2)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`6.BinaryFindLessOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`6.BinaryFindLess(`1,`2)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`6.BinaryFindGreaterOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`6.BinaryFindGreater(`1,`2)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`6.BinaryFindEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`6.BinaryFindLessOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`6.BinaryFindLess(`1,`2,`3)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`6.BinaryFindGreaterOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`6.BinaryFindGreater(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`6.BinaryFindEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`6.BinaryFindLessOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`6.BinaryFindLess(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`6.BinaryFindGreaterOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`6.BinaryFindGreater(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`6.BinaryFindEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`6.BinaryFindLessOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`6.BinaryFindLess(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`6.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`6.BinaryFindGreater(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7">
            <summary>
            Part of sorted read only list with binary search based on items compare (not items equality)
            </summary>
            <typeparam name="T">Items type</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
            <typeparam name="K4">Key4 type</typeparam>
            <typeparam name="K5">Key5 type</typeparam>
            <typeparam name="K6">Key6 type</typeparam>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.op_Implicit(WojciechMikołajewicz.SortedList.SortedReadOnlyList{`0,`1,`2,`3,`4,`5,`6})~WojciechMikołajewicz.SortedList.SortedReadOnlyListRange{`0,`1,`2,`3,`4,`5,`6}">
            <summary>
            Implicit cast operator
            </summary>
            <param name="orderedReadOnlyList">Sorted read only list</param>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.KeysData">
            <summary>
            Keys data
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.Memory">
            <summary>
            Memory of the part of source sorted read only list
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.Count">
            <summary>
            Number of items
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.IsEmpty">
            <summary>
            Is empty
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.Item(System.Int32)">
            <summary>
            Returns an item of <paramref name="index"/>
            </summary>
            <param name="index">Index of the item to return</param>
            <returns>Item of specified <paramref name="index"/></returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.#ctor(WojciechMikołajewicz.SortedList.SortedReadOnlyList{`0,`1,`2,`3,`4,`5,`6},System.Range)">
            <summary>
            Constructor
            </summary>
            <param name="orderedList">Source sorted read only list</param>
            <param name="range">Range in the <paramref name="orderedList"/></param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.#ctor(WojciechMikołajewicz.SortedList.KeysData.KeysData{`0,`1,`2,`3,`4,`5,`6},System.ReadOnlyMemory{`0})">
            <summary>
            Constructor
            </summary>
            <param name="keysData">Keys data</param>
            <param name="memory">Read only memory of sorted read only list</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.ItemRef(System.Int32)">
            <summary>
            Gets a read-only reference to the element at the specified <paramref name="index"/> in the read-only list
            </summary>
            <param name="index">The zero-based index of the element to get a reference to</param>
            <returns>A read-only reference to the element at the specified <paramref name="index"/> in the read-only list</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.BinaryFindEqual(`1)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.BinaryFindLessOrEqual(`1)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.BinaryFindLess(`1)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.BinaryFindGreaterOrEqual(`1)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.BinaryFindGreater(`1)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.BinaryFindEqual(`1,`2)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.BinaryFindLessOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.BinaryFindLess(`1,`2)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.BinaryFindGreaterOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.BinaryFindGreater(`1,`2)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.BinaryFindEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.BinaryFindLessOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.BinaryFindLess(`1,`2,`3)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.BinaryFindGreaterOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.BinaryFindGreater(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.BinaryFindEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.BinaryFindLessOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.BinaryFindLess(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.BinaryFindGreaterOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.BinaryFindGreater(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.BinaryFindEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.BinaryFindLessOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.BinaryFindLess(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.BinaryFindGreater(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.BinaryFindEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.BinaryFindLess(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`7.BinaryFindGreater(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8">
            <summary>
            Part of sorted read only list with binary search based on items compare (not items equality)
            </summary>
            <typeparam name="T">Items type</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
            <typeparam name="K4">Key4 type</typeparam>
            <typeparam name="K5">Key5 type</typeparam>
            <typeparam name="K6">Key6 type</typeparam>
            <typeparam name="K7">Key7 type</typeparam>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.op_Implicit(WojciechMikołajewicz.SortedList.SortedReadOnlyList{`0,`1,`2,`3,`4,`5,`6,`7})~WojciechMikołajewicz.SortedList.SortedReadOnlyListRange{`0,`1,`2,`3,`4,`5,`6,`7}">
            <summary>
            Implicit cast operator
            </summary>
            <param name="orderedReadOnlyList">Sorted read only list</param>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.KeysData">
            <summary>
            Keys data
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.Memory">
            <summary>
            Memory of the part of source sorted read only list
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.Count">
            <summary>
            Number of items
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.IsEmpty">
            <summary>
            Is empty
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.Item(System.Int32)">
            <summary>
            Returns an item of <paramref name="index"/>
            </summary>
            <param name="index">Index of the item to return</param>
            <returns>Item of specified <paramref name="index"/></returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.#ctor(WojciechMikołajewicz.SortedList.SortedReadOnlyList{`0,`1,`2,`3,`4,`5,`6,`7},System.Range)">
            <summary>
            Constructor
            </summary>
            <param name="orderedList">Source sorted read only list</param>
            <param name="range">Range in the <paramref name="orderedList"/></param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.#ctor(WojciechMikołajewicz.SortedList.KeysData.KeysData{`0,`1,`2,`3,`4,`5,`6,`7},System.ReadOnlyMemory{`0})">
            <summary>
            Constructor
            </summary>
            <param name="keysData">Keys data</param>
            <param name="memory">Read only memory of sorted read only list</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.ItemRef(System.Int32)">
            <summary>
            Gets a read-only reference to the element at the specified <paramref name="index"/> in the read-only list
            </summary>
            <param name="index">The zero-based index of the element to get a reference to</param>
            <returns>A read-only reference to the element at the specified <paramref name="index"/> in the read-only list</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.BinaryFindEqual(`1)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.BinaryFindLessOrEqual(`1)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.BinaryFindLess(`1)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.BinaryFindGreaterOrEqual(`1)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.BinaryFindGreater(`1)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.BinaryFindEqual(`1,`2)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.BinaryFindLessOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.BinaryFindLess(`1,`2)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.BinaryFindGreaterOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.BinaryFindGreater(`1,`2)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.BinaryFindEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.BinaryFindLessOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.BinaryFindLess(`1,`2,`3)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.BinaryFindGreaterOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.BinaryFindGreater(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.BinaryFindEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.BinaryFindLessOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.BinaryFindLess(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.BinaryFindGreaterOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.BinaryFindGreater(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.BinaryFindEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.BinaryFindLessOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.BinaryFindLess(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.BinaryFindGreater(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.BinaryFindEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.BinaryFindLess(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.BinaryFindGreater(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`8.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9">
            <summary>
            Part of sorted read only list with binary search based on items compare (not items equality)
            </summary>
            <typeparam name="T">Items type</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
            <typeparam name="K4">Key4 type</typeparam>
            <typeparam name="K5">Key5 type</typeparam>
            <typeparam name="K6">Key6 type</typeparam>
            <typeparam name="K7">Key7 type</typeparam>
            <typeparam name="K8">Key8 type</typeparam>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.op_Implicit(WojciechMikołajewicz.SortedList.SortedReadOnlyList{`0,`1,`2,`3,`4,`5,`6,`7,`8})~WojciechMikołajewicz.SortedList.SortedReadOnlyListRange{`0,`1,`2,`3,`4,`5,`6,`7,`8}">
            <summary>
            Implicit cast operator
            </summary>
            <param name="orderedReadOnlyList">Sorted read only list</param>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.KeysData">
            <summary>
            Keys data
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.Memory">
            <summary>
            Memory of the part of source sorted read only list
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.Count">
            <summary>
            Number of items
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.IsEmpty">
            <summary>
            Is empty
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.Item(System.Int32)">
            <summary>
            Returns an item of <paramref name="index"/>
            </summary>
            <param name="index">Index of the item to return</param>
            <returns>Item of specified <paramref name="index"/></returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.#ctor(WojciechMikołajewicz.SortedList.SortedReadOnlyList{`0,`1,`2,`3,`4,`5,`6,`7,`8},System.Range)">
            <summary>
            Constructor
            </summary>
            <param name="orderedList">Source sorted read only list</param>
            <param name="range">Range in the <paramref name="orderedList"/></param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.#ctor(WojciechMikołajewicz.SortedList.KeysData.KeysData{`0,`1,`2,`3,`4,`5,`6,`7,`8},System.ReadOnlyMemory{`0})">
            <summary>
            Constructor
            </summary>
            <param name="keysData">Keys data</param>
            <param name="memory">Read only memory of sorted read only list</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.ItemRef(System.Int32)">
            <summary>
            Gets a read-only reference to the element at the specified <paramref name="index"/> in the read-only list
            </summary>
            <param name="index">The zero-based index of the element to get a reference to</param>
            <returns>A read-only reference to the element at the specified <paramref name="index"/> in the read-only list</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.BinaryFindEqual(`1)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.BinaryFindLessOrEqual(`1)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.BinaryFindLess(`1)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.BinaryFindGreaterOrEqual(`1)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.BinaryFindGreater(`1)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.BinaryFindEqual(`1,`2)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.BinaryFindLessOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.BinaryFindLess(`1,`2)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.BinaryFindGreaterOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.BinaryFindGreater(`1,`2)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.BinaryFindEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.BinaryFindLessOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.BinaryFindLess(`1,`2,`3)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.BinaryFindGreaterOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.BinaryFindGreater(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.BinaryFindEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.BinaryFindLessOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.BinaryFindLess(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.BinaryFindGreaterOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.BinaryFindGreater(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.BinaryFindEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.BinaryFindLessOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.BinaryFindLess(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.BinaryFindGreater(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.BinaryFindEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.BinaryFindLess(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.BinaryFindGreater(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`9.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10">
            <summary>
            Part of sorted read only list with binary search based on items compare (not items equality)
            </summary>
            <typeparam name="T">Items type</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
            <typeparam name="K4">Key4 type</typeparam>
            <typeparam name="K5">Key5 type</typeparam>
            <typeparam name="K6">Key6 type</typeparam>
            <typeparam name="K7">Key7 type</typeparam>
            <typeparam name="K8">Key8 type</typeparam>
            <typeparam name="K9">Key9 type</typeparam>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.op_Implicit(WojciechMikołajewicz.SortedList.SortedReadOnlyList{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9})~WojciechMikołajewicz.SortedList.SortedReadOnlyListRange{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9}">
            <summary>
            Implicit cast operator
            </summary>
            <param name="orderedReadOnlyList">Sorted read only list</param>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.KeysData">
            <summary>
            Keys data
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.Memory">
            <summary>
            Memory of the part of source sorted read only list
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.Count">
            <summary>
            Number of items
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.IsEmpty">
            <summary>
            Is empty
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.Item(System.Int32)">
            <summary>
            Returns an item of <paramref name="index"/>
            </summary>
            <param name="index">Index of the item to return</param>
            <returns>Item of specified <paramref name="index"/></returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.#ctor(WojciechMikołajewicz.SortedList.SortedReadOnlyList{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9},System.Range)">
            <summary>
            Constructor
            </summary>
            <param name="orderedList">Source sorted read only list</param>
            <param name="range">Range in the <paramref name="orderedList"/></param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.#ctor(WojciechMikołajewicz.SortedList.KeysData.KeysData{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9},System.ReadOnlyMemory{`0})">
            <summary>
            Constructor
            </summary>
            <param name="keysData">Keys data</param>
            <param name="memory">Read only memory of sorted read only list</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.ItemRef(System.Int32)">
            <summary>
            Gets a read-only reference to the element at the specified <paramref name="index"/> in the read-only list
            </summary>
            <param name="index">The zero-based index of the element to get a reference to</param>
            <returns>A read-only reference to the element at the specified <paramref name="index"/> in the read-only list</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindEqual(`1)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindLessOrEqual(`1)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindLess(`1)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindGreaterOrEqual(`1)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindGreater(`1)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindEqual(`1,`2)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindLessOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindLess(`1,`2)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindGreaterOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindGreater(`1,`2)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindLessOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindLess(`1,`2,`3)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindGreaterOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindGreater(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindLessOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindLess(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindGreaterOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindGreater(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindLessOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindLess(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindGreater(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindLess(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindGreater(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`10.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11">
            <summary>
            Part of sorted read only list with binary search based on items compare (not items equality)
            </summary>
            <typeparam name="T">Items type</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
            <typeparam name="K4">Key4 type</typeparam>
            <typeparam name="K5">Key5 type</typeparam>
            <typeparam name="K6">Key6 type</typeparam>
            <typeparam name="K7">Key7 type</typeparam>
            <typeparam name="K8">Key8 type</typeparam>
            <typeparam name="K9">Key9 type</typeparam>
            <typeparam name="K10">Key10 type</typeparam>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.op_Implicit(WojciechMikołajewicz.SortedList.SortedReadOnlyList{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10})~WojciechMikołajewicz.SortedList.SortedReadOnlyListRange{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10}">
            <summary>
            Implicit cast operator
            </summary>
            <param name="orderedReadOnlyList">Sorted read only list</param>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.KeysData">
            <summary>
            Keys data
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.Memory">
            <summary>
            Memory of the part of source sorted read only list
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.Count">
            <summary>
            Number of items
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.IsEmpty">
            <summary>
            Is empty
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.Item(System.Int32)">
            <summary>
            Returns an item of <paramref name="index"/>
            </summary>
            <param name="index">Index of the item to return</param>
            <returns>Item of specified <paramref name="index"/></returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.#ctor(WojciechMikołajewicz.SortedList.SortedReadOnlyList{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10},System.Range)">
            <summary>
            Constructor
            </summary>
            <param name="orderedList">Source sorted read only list</param>
            <param name="range">Range in the <paramref name="orderedList"/></param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.#ctor(WojciechMikołajewicz.SortedList.KeysData.KeysData{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10},System.ReadOnlyMemory{`0})">
            <summary>
            Constructor
            </summary>
            <param name="keysData">Keys data</param>
            <param name="memory">Read only memory of sorted read only list</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.ItemRef(System.Int32)">
            <summary>
            Gets a read-only reference to the element at the specified <paramref name="index"/> in the read-only list
            </summary>
            <param name="index">The zero-based index of the element to get a reference to</param>
            <returns>A read-only reference to the element at the specified <paramref name="index"/> in the read-only list</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindEqual(`1)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindLessOrEqual(`1)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindLess(`1)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindGreaterOrEqual(`1)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindGreater(`1)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindEqual(`1,`2)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindLessOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindLess(`1,`2)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindGreaterOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindGreater(`1,`2)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindLessOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindLess(`1,`2,`3)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindGreaterOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindGreater(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindLessOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindLess(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindGreaterOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindGreater(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindLessOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindLess(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindGreater(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindLess(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindGreater(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`11.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12">
            <summary>
            Part of sorted read only list with binary search based on items compare (not items equality)
            </summary>
            <typeparam name="T">Items type</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
            <typeparam name="K4">Key4 type</typeparam>
            <typeparam name="K5">Key5 type</typeparam>
            <typeparam name="K6">Key6 type</typeparam>
            <typeparam name="K7">Key7 type</typeparam>
            <typeparam name="K8">Key8 type</typeparam>
            <typeparam name="K9">Key9 type</typeparam>
            <typeparam name="K10">Key10 type</typeparam>
            <typeparam name="K11">Key11 type</typeparam>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.op_Implicit(WojciechMikołajewicz.SortedList.SortedReadOnlyList{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11})~WojciechMikołajewicz.SortedList.SortedReadOnlyListRange{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11}">
            <summary>
            Implicit cast operator
            </summary>
            <param name="orderedReadOnlyList">Sorted read only list</param>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.KeysData">
            <summary>
            Keys data
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.Memory">
            <summary>
            Memory of the part of source sorted read only list
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.Count">
            <summary>
            Number of items
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.IsEmpty">
            <summary>
            Is empty
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.Item(System.Int32)">
            <summary>
            Returns an item of <paramref name="index"/>
            </summary>
            <param name="index">Index of the item to return</param>
            <returns>Item of specified <paramref name="index"/></returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.#ctor(WojciechMikołajewicz.SortedList.SortedReadOnlyList{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11},System.Range)">
            <summary>
            Constructor
            </summary>
            <param name="orderedList">Source sorted read only list</param>
            <param name="range">Range in the <paramref name="orderedList"/></param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.#ctor(WojciechMikołajewicz.SortedList.KeysData.KeysData{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11},System.ReadOnlyMemory{`0})">
            <summary>
            Constructor
            </summary>
            <param name="keysData">Keys data</param>
            <param name="memory">Read only memory of sorted read only list</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.ItemRef(System.Int32)">
            <summary>
            Gets a read-only reference to the element at the specified <paramref name="index"/> in the read-only list
            </summary>
            <param name="index">The zero-based index of the element to get a reference to</param>
            <returns>A read-only reference to the element at the specified <paramref name="index"/> in the read-only list</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindEqual(`1)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindLessOrEqual(`1)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindLess(`1)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindGreaterOrEqual(`1)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindGreater(`1)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindEqual(`1,`2)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindLessOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindLess(`1,`2)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindGreaterOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindGreater(`1,`2)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindLessOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindLess(`1,`2,`3)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindGreaterOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindGreater(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindLessOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindLess(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindGreaterOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindGreater(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindLessOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindLess(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindGreater(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindLess(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindGreater(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`12.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13">
            <summary>
            Part of sorted read only list with binary search based on items compare (not items equality)
            </summary>
            <typeparam name="T">Items type</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
            <typeparam name="K4">Key4 type</typeparam>
            <typeparam name="K5">Key5 type</typeparam>
            <typeparam name="K6">Key6 type</typeparam>
            <typeparam name="K7">Key7 type</typeparam>
            <typeparam name="K8">Key8 type</typeparam>
            <typeparam name="K9">Key9 type</typeparam>
            <typeparam name="K10">Key10 type</typeparam>
            <typeparam name="K11">Key11 type</typeparam>
            <typeparam name="K12">Key12 type</typeparam>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.op_Implicit(WojciechMikołajewicz.SortedList.SortedReadOnlyList{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12})~WojciechMikołajewicz.SortedList.SortedReadOnlyListRange{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12}">
            <summary>
            Implicit cast operator
            </summary>
            <param name="orderedReadOnlyList">Sorted read only list</param>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.KeysData">
            <summary>
            Keys data
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.Memory">
            <summary>
            Memory of the part of source sorted read only list
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.Count">
            <summary>
            Number of items
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.IsEmpty">
            <summary>
            Is empty
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.Item(System.Int32)">
            <summary>
            Returns an item of <paramref name="index"/>
            </summary>
            <param name="index">Index of the item to return</param>
            <returns>Item of specified <paramref name="index"/></returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.#ctor(WojciechMikołajewicz.SortedList.SortedReadOnlyList{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12},System.Range)">
            <summary>
            Constructor
            </summary>
            <param name="orderedList">Source sorted read only list</param>
            <param name="range">Range in the <paramref name="orderedList"/></param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.#ctor(WojciechMikołajewicz.SortedList.KeysData.KeysData{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12},System.ReadOnlyMemory{`0})">
            <summary>
            Constructor
            </summary>
            <param name="keysData">Keys data</param>
            <param name="memory">Read only memory of sorted read only list</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.ItemRef(System.Int32)">
            <summary>
            Gets a read-only reference to the element at the specified <paramref name="index"/> in the read-only list
            </summary>
            <param name="index">The zero-based index of the element to get a reference to</param>
            <returns>A read-only reference to the element at the specified <paramref name="index"/> in the read-only list</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindEqual(`1)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindLessOrEqual(`1)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindLess(`1)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindGreaterOrEqual(`1)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindGreater(`1)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindEqual(`1,`2)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindLessOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindLess(`1,`2)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindGreaterOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindGreater(`1,`2)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindLessOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindLess(`1,`2,`3)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindGreaterOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindGreater(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindLessOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindLess(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindGreaterOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindGreater(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindLessOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindLess(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindGreater(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindLess(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindGreater(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`13.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14">
            <summary>
            Part of sorted read only list with binary search based on items compare (not items equality)
            </summary>
            <typeparam name="T">Items type</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
            <typeparam name="K4">Key4 type</typeparam>
            <typeparam name="K5">Key5 type</typeparam>
            <typeparam name="K6">Key6 type</typeparam>
            <typeparam name="K7">Key7 type</typeparam>
            <typeparam name="K8">Key8 type</typeparam>
            <typeparam name="K9">Key9 type</typeparam>
            <typeparam name="K10">Key10 type</typeparam>
            <typeparam name="K11">Key11 type</typeparam>
            <typeparam name="K12">Key12 type</typeparam>
            <typeparam name="K13">Key13 type</typeparam>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.op_Implicit(WojciechMikołajewicz.SortedList.SortedReadOnlyList{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13})~WojciechMikołajewicz.SortedList.SortedReadOnlyListRange{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13}">
            <summary>
            Implicit cast operator
            </summary>
            <param name="orderedReadOnlyList">Sorted read only list</param>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.KeysData">
            <summary>
            Keys data
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.Memory">
            <summary>
            Memory of the part of source sorted read only list
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.Count">
            <summary>
            Number of items
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.IsEmpty">
            <summary>
            Is empty
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.Item(System.Int32)">
            <summary>
            Returns an item of <paramref name="index"/>
            </summary>
            <param name="index">Index of the item to return</param>
            <returns>Item of specified <paramref name="index"/></returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.#ctor(WojciechMikołajewicz.SortedList.SortedReadOnlyList{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13},System.Range)">
            <summary>
            Constructor
            </summary>
            <param name="orderedList">Source sorted read only list</param>
            <param name="range">Range in the <paramref name="orderedList"/></param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.#ctor(WojciechMikołajewicz.SortedList.KeysData.KeysData{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13},System.ReadOnlyMemory{`0})">
            <summary>
            Constructor
            </summary>
            <param name="keysData">Keys data</param>
            <param name="memory">Read only memory of sorted read only list</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.ItemRef(System.Int32)">
            <summary>
            Gets a read-only reference to the element at the specified <paramref name="index"/> in the read-only list
            </summary>
            <param name="index">The zero-based index of the element to get a reference to</param>
            <returns>A read-only reference to the element at the specified <paramref name="index"/> in the read-only list</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindEqual(`1)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindLessOrEqual(`1)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindLess(`1)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindGreaterOrEqual(`1)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindGreater(`1)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindEqual(`1,`2)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindLessOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindLess(`1,`2)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindGreaterOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindGreater(`1,`2)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindLessOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindLess(`1,`2,`3)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindGreaterOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindGreater(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindLessOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindLess(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindGreaterOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindGreater(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindLessOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindLess(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindGreater(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindLess(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindGreater(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`14.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15">
            <summary>
            Part of sorted read only list with binary search based on items compare (not items equality)
            </summary>
            <typeparam name="T">Items type</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
            <typeparam name="K4">Key4 type</typeparam>
            <typeparam name="K5">Key5 type</typeparam>
            <typeparam name="K6">Key6 type</typeparam>
            <typeparam name="K7">Key7 type</typeparam>
            <typeparam name="K8">Key8 type</typeparam>
            <typeparam name="K9">Key9 type</typeparam>
            <typeparam name="K10">Key10 type</typeparam>
            <typeparam name="K11">Key11 type</typeparam>
            <typeparam name="K12">Key12 type</typeparam>
            <typeparam name="K13">Key13 type</typeparam>
            <typeparam name="K14">Key14 type</typeparam>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.op_Implicit(WojciechMikołajewicz.SortedList.SortedReadOnlyList{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14})~WojciechMikołajewicz.SortedList.SortedReadOnlyListRange{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14}">
            <summary>
            Implicit cast operator
            </summary>
            <param name="orderedReadOnlyList">Sorted read only list</param>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.KeysData">
            <summary>
            Keys data
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.Memory">
            <summary>
            Memory of the part of source sorted read only list
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.Count">
            <summary>
            Number of items
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.IsEmpty">
            <summary>
            Is empty
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.Item(System.Int32)">
            <summary>
            Returns an item of <paramref name="index"/>
            </summary>
            <param name="index">Index of the item to return</param>
            <returns>Item of specified <paramref name="index"/></returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.#ctor(WojciechMikołajewicz.SortedList.SortedReadOnlyList{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14},System.Range)">
            <summary>
            Constructor
            </summary>
            <param name="orderedList">Source sorted read only list</param>
            <param name="range">Range in the <paramref name="orderedList"/></param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.#ctor(WojciechMikołajewicz.SortedList.KeysData.KeysData{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14},System.ReadOnlyMemory{`0})">
            <summary>
            Constructor
            </summary>
            <param name="keysData">Keys data</param>
            <param name="memory">Read only memory of sorted read only list</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.ItemRef(System.Int32)">
            <summary>
            Gets a read-only reference to the element at the specified <paramref name="index"/> in the read-only list
            </summary>
            <param name="index">The zero-based index of the element to get a reference to</param>
            <returns>A read-only reference to the element at the specified <paramref name="index"/> in the read-only list</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindEqual(`1)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindLessOrEqual(`1)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindLess(`1)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindGreaterOrEqual(`1)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindGreater(`1)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindEqual(`1,`2)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindLessOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindLess(`1,`2)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindGreaterOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindGreater(`1,`2)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindLessOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindLess(`1,`2,`3)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindGreaterOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindGreater(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindLessOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindLess(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindGreaterOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindGreater(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindLessOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindLess(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindGreater(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindLess(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindGreater(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`15.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16">
            <summary>
            Part of sorted read only list with binary search based on items compare (not items equality)
            </summary>
            <typeparam name="T">Items type</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
            <typeparam name="K4">Key4 type</typeparam>
            <typeparam name="K5">Key5 type</typeparam>
            <typeparam name="K6">Key6 type</typeparam>
            <typeparam name="K7">Key7 type</typeparam>
            <typeparam name="K8">Key8 type</typeparam>
            <typeparam name="K9">Key9 type</typeparam>
            <typeparam name="K10">Key10 type</typeparam>
            <typeparam name="K11">Key11 type</typeparam>
            <typeparam name="K12">Key12 type</typeparam>
            <typeparam name="K13">Key13 type</typeparam>
            <typeparam name="K14">Key14 type</typeparam>
            <typeparam name="K15">Key15 type</typeparam>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.op_Implicit(WojciechMikołajewicz.SortedList.SortedReadOnlyList{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15})~WojciechMikołajewicz.SortedList.SortedReadOnlyListRange{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15}">
            <summary>
            Implicit cast operator
            </summary>
            <param name="orderedReadOnlyList">Sorted read only list</param>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.KeysData">
            <summary>
            Keys data
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.Memory">
            <summary>
            Memory of the part of source sorted read only list
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.Count">
            <summary>
            Number of items
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.IsEmpty">
            <summary>
            Is empty
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.Item(System.Int32)">
            <summary>
            Returns an item of <paramref name="index"/>
            </summary>
            <param name="index">Index of the item to return</param>
            <returns>Item of specified <paramref name="index"/></returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.#ctor(WojciechMikołajewicz.SortedList.SortedReadOnlyList{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15},System.Range)">
            <summary>
            Constructor
            </summary>
            <param name="orderedList">Source sorted read only list</param>
            <param name="range">Range in the <paramref name="orderedList"/></param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.#ctor(WojciechMikołajewicz.SortedList.KeysData.KeysData{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15},System.ReadOnlyMemory{`0})">
            <summary>
            Constructor
            </summary>
            <param name="keysData">Keys data</param>
            <param name="memory">Read only memory of sorted read only list</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.ItemRef(System.Int32)">
            <summary>
            Gets a read-only reference to the element at the specified <paramref name="index"/> in the read-only list
            </summary>
            <param name="index">The zero-based index of the element to get a reference to</param>
            <returns>A read-only reference to the element at the specified <paramref name="index"/> in the read-only list</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindEqual(`1)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindLessOrEqual(`1)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindLess(`1)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindGreaterOrEqual(`1)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindGreater(`1)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindEqual(`1,`2)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindLessOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindLess(`1,`2)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindGreaterOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindGreater(`1,`2)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindLessOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindLess(`1,`2,`3)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindGreaterOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindGreater(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindLessOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindLess(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindGreaterOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindGreater(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindLessOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindLess(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindGreater(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindLess(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindGreater(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`16.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17">
            <summary>
            Part of sorted read only list with binary search based on items compare (not items equality)
            </summary>
            <typeparam name="T">Items type</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
            <typeparam name="K4">Key4 type</typeparam>
            <typeparam name="K5">Key5 type</typeparam>
            <typeparam name="K6">Key6 type</typeparam>
            <typeparam name="K7">Key7 type</typeparam>
            <typeparam name="K8">Key8 type</typeparam>
            <typeparam name="K9">Key9 type</typeparam>
            <typeparam name="K10">Key10 type</typeparam>
            <typeparam name="K11">Key11 type</typeparam>
            <typeparam name="K12">Key12 type</typeparam>
            <typeparam name="K13">Key13 type</typeparam>
            <typeparam name="K14">Key14 type</typeparam>
            <typeparam name="K15">Key15 type</typeparam>
            <typeparam name="K16">Key16 type</typeparam>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.op_Implicit(WojciechMikołajewicz.SortedList.SortedReadOnlyList{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16})~WojciechMikołajewicz.SortedList.SortedReadOnlyListRange{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16}">
            <summary>
            Implicit cast operator
            </summary>
            <param name="orderedReadOnlyList">Sorted read only list</param>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.KeysData">
            <summary>
            Keys data
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.Memory">
            <summary>
            Memory of the part of source sorted read only list
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.Count">
            <summary>
            Number of items
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.IsEmpty">
            <summary>
            Is empty
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.Item(System.Int32)">
            <summary>
            Returns an item of <paramref name="index"/>
            </summary>
            <param name="index">Index of the item to return</param>
            <returns>Item of specified <paramref name="index"/></returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.#ctor(WojciechMikołajewicz.SortedList.SortedReadOnlyList{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16},System.Range)">
            <summary>
            Constructor
            </summary>
            <param name="orderedList">Source sorted read only list</param>
            <param name="range">Range in the <paramref name="orderedList"/></param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.#ctor(WojciechMikołajewicz.SortedList.KeysData.KeysData{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16},System.ReadOnlyMemory{`0})">
            <summary>
            Constructor
            </summary>
            <param name="keysData">Keys data</param>
            <param name="memory">Read only memory of sorted read only list</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.ItemRef(System.Int32)">
            <summary>
            Gets a read-only reference to the element at the specified <paramref name="index"/> in the read-only list
            </summary>
            <param name="index">The zero-based index of the element to get a reference to</param>
            <returns>A read-only reference to the element at the specified <paramref name="index"/> in the read-only list</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindEqual(`1)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindLessOrEqual(`1)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindLess(`1)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindGreaterOrEqual(`1)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindGreater(`1)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindEqual(`1,`2)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindLessOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindLess(`1,`2)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindGreaterOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindGreater(`1,`2)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindLessOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindLess(`1,`2,`3)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindGreaterOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindGreater(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindLessOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindLess(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindGreaterOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindGreater(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindLessOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindLess(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindGreater(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindLess(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindGreater(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <param name="key16">Key 16 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <param name="key16">Key 16 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <param name="key16">Key 16 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <param name="key16">Key 16 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListRange`17.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <param name="key16">Key 16 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.SortedReadOnlyList`2">
            <summary>
            Sorted read only list with binary search based on items compare (not items equality)
            </summary>
            <typeparam name="T">Items type</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`2.#ctor(System.Collections.Generic.IEnumerable{`0},WojciechMikołajewicz.SortedList.KeyData{`0,`1}@)">
            <summary>
            Constructor
            </summary>
            <param name="collection">Collection base on which array is created</param>
            <param name="keyData1">Key 1 data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`2.#ctor(System.Collections.Generic.IEnumerable{`0},WojciechMikołajewicz.SortedList.KeysData.KeysData{`0,`1})">
            <summary>
            Constructor
            </summary>
            <param name="collection">Collection base on which array is created</param>
            <param name="keysData">Keys data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`2.BinaryFindEqual(`1)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`2.BinaryFindLessOrEqual(`1)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`2.BinaryFindLess(`1)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`2.BinaryFindGreaterOrEqual(`1)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`2.BinaryFindGreater(`1)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`2.BinaryFindEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`2.BinaryFindLessOrEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`2.BinaryFindLessRange(System.Range,`1)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`2.BinaryFindGreaterOrEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`2.BinaryFindGreaterRange(System.Range,`1)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.SortedReadOnlyList`3">
            <summary>
            Sorted read only list with binary search based on items compare (not items equality)
            </summary>
            <typeparam name="T">Items type</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`3.#ctor(System.Collections.Generic.IEnumerable{`0},WojciechMikołajewicz.SortedList.KeyData{`0,`1}@,WojciechMikołajewicz.SortedList.KeyData{`0,`2}@)">
            <summary>
            Constructor
            </summary>
            <param name="collection">Collection base on which array is created</param>
            <param name="keyData1">Key 1 data</param>
            <param name="keyData2">Key 2 data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`3.#ctor(System.Collections.Generic.IEnumerable{`0},WojciechMikołajewicz.SortedList.KeysData.KeysData{`0,`1,`2})">
            <summary>
            Constructor
            </summary>
            <param name="collection">Collection base on which array is created</param>
            <param name="keysData">Keys data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`3.BinaryFindEqual(`1)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`3.BinaryFindEqual(`1,`2)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`3.BinaryFindLessOrEqual(`1)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`3.BinaryFindLessOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`3.BinaryFindLess(`1)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`3.BinaryFindLess(`1,`2)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`3.BinaryFindGreaterOrEqual(`1)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`3.BinaryFindGreaterOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`3.BinaryFindGreater(`1)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`3.BinaryFindGreater(`1,`2)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`3.BinaryFindEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`3.BinaryFindEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`3.BinaryFindLessOrEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`3.BinaryFindLessOrEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`3.BinaryFindLessRange(System.Range,`1)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`3.BinaryFindLessRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`3.BinaryFindGreaterOrEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`3.BinaryFindGreaterOrEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`3.BinaryFindGreaterRange(System.Range,`1)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`3.BinaryFindGreaterRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.SortedReadOnlyList`4">
            <summary>
            Sorted read only list with binary search based on items compare (not items equality)
            </summary>
            <typeparam name="T">Items type</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`4.#ctor(System.Collections.Generic.IEnumerable{`0},WojciechMikołajewicz.SortedList.KeyData{`0,`1}@,WojciechMikołajewicz.SortedList.KeyData{`0,`2}@,WojciechMikołajewicz.SortedList.KeyData{`0,`3}@)">
            <summary>
            Constructor
            </summary>
            <param name="collection">Collection base on which array is created</param>
            <param name="keyData1">Key 1 data</param>
            <param name="keyData2">Key 2 data</param>
            <param name="keyData3">Key 3 data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`4.#ctor(System.Collections.Generic.IEnumerable{`0},WojciechMikołajewicz.SortedList.KeysData.KeysData{`0,`1,`2,`3})">
            <summary>
            Constructor
            </summary>
            <param name="collection">Collection base on which array is created</param>
            <param name="keysData">Keys data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`4.BinaryFindEqual(`1)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`4.BinaryFindEqual(`1,`2)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`4.BinaryFindEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`4.BinaryFindLessOrEqual(`1)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`4.BinaryFindLessOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`4.BinaryFindLessOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`4.BinaryFindLess(`1)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`4.BinaryFindLess(`1,`2)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`4.BinaryFindLess(`1,`2,`3)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`4.BinaryFindGreaterOrEqual(`1)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`4.BinaryFindGreaterOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`4.BinaryFindGreaterOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`4.BinaryFindGreater(`1)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`4.BinaryFindGreater(`1,`2)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`4.BinaryFindGreater(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`4.BinaryFindEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`4.BinaryFindEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`4.BinaryFindEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`4.BinaryFindLessOrEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`4.BinaryFindLessOrEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`4.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`4.BinaryFindLessRange(System.Range,`1)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`4.BinaryFindLessRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`4.BinaryFindLessRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`4.BinaryFindGreaterOrEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`4.BinaryFindGreaterOrEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`4.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`4.BinaryFindGreaterRange(System.Range,`1)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`4.BinaryFindGreaterRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`4.BinaryFindGreaterRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5">
            <summary>
            Sorted read only list with binary search based on items compare (not items equality)
            </summary>
            <typeparam name="T">Items type</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
            <typeparam name="K4">Key4 type</typeparam>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.#ctor(System.Collections.Generic.IEnumerable{`0},WojciechMikołajewicz.SortedList.KeyData{`0,`1}@,WojciechMikołajewicz.SortedList.KeyData{`0,`2}@,WojciechMikołajewicz.SortedList.KeyData{`0,`3}@,WojciechMikołajewicz.SortedList.KeyData{`0,`4}@)">
            <summary>
            Constructor
            </summary>
            <param name="collection">Collection base on which array is created</param>
            <param name="keyData1">Key 1 data</param>
            <param name="keyData2">Key 2 data</param>
            <param name="keyData3">Key 3 data</param>
            <param name="keyData4">Key 4 data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.#ctor(System.Collections.Generic.IEnumerable{`0},WojciechMikołajewicz.SortedList.KeysData.KeysData{`0,`1,`2,`3,`4})">
            <summary>
            Constructor
            </summary>
            <param name="collection">Collection base on which array is created</param>
            <param name="keysData">Keys data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.BinaryFindEqual(`1)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.BinaryFindEqual(`1,`2)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.BinaryFindEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.BinaryFindEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.BinaryFindLessOrEqual(`1)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.BinaryFindLessOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.BinaryFindLessOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.BinaryFindLessOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.BinaryFindLess(`1)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.BinaryFindLess(`1,`2)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.BinaryFindLess(`1,`2,`3)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.BinaryFindLess(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.BinaryFindGreaterOrEqual(`1)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.BinaryFindGreaterOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.BinaryFindGreaterOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.BinaryFindGreaterOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.BinaryFindGreater(`1)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.BinaryFindGreater(`1,`2)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.BinaryFindGreater(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.BinaryFindGreater(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.BinaryFindEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.BinaryFindEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.BinaryFindEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.BinaryFindEqualRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.BinaryFindLessOrEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.BinaryFindLessOrEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.BinaryFindLessRange(System.Range,`1)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.BinaryFindLessRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.BinaryFindLessRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.BinaryFindLessRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.BinaryFindGreaterOrEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.BinaryFindGreaterOrEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.BinaryFindGreaterRange(System.Range,`1)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.BinaryFindGreaterRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.BinaryFindGreaterRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`5.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6">
            <summary>
            Sorted read only list with binary search based on items compare (not items equality)
            </summary>
            <typeparam name="T">Items type</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
            <typeparam name="K4">Key4 type</typeparam>
            <typeparam name="K5">Key5 type</typeparam>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.#ctor(System.Collections.Generic.IEnumerable{`0},WojciechMikołajewicz.SortedList.KeyData{`0,`1}@,WojciechMikołajewicz.SortedList.KeyData{`0,`2}@,WojciechMikołajewicz.SortedList.KeyData{`0,`3}@,WojciechMikołajewicz.SortedList.KeyData{`0,`4}@,WojciechMikołajewicz.SortedList.KeyData{`0,`5}@)">
            <summary>
            Constructor
            </summary>
            <param name="collection">Collection base on which array is created</param>
            <param name="keyData1">Key 1 data</param>
            <param name="keyData2">Key 2 data</param>
            <param name="keyData3">Key 3 data</param>
            <param name="keyData4">Key 4 data</param>
            <param name="keyData5">Key 5 data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.#ctor(System.Collections.Generic.IEnumerable{`0},WojciechMikołajewicz.SortedList.KeysData.KeysData{`0,`1,`2,`3,`4,`5})">
            <summary>
            Constructor
            </summary>
            <param name="collection">Collection base on which array is created</param>
            <param name="keysData">Keys data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindEqual(`1)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindEqual(`1,`2)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindLessOrEqual(`1)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindLessOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindLessOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindLessOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindLessOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindLess(`1)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindLess(`1,`2)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindLess(`1,`2,`3)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindLess(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindLess(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindGreaterOrEqual(`1)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindGreaterOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindGreaterOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindGreaterOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindGreater(`1)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindGreater(`1,`2)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindGreater(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindGreater(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindGreater(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindEqualRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindLessOrEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindLessOrEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindLessRange(System.Range,`1)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindLessRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindLessRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindLessRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindGreaterOrEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindGreaterOrEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindGreaterRange(System.Range,`1)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindGreaterRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindGreaterRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`6.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7">
            <summary>
            Sorted read only list with binary search based on items compare (not items equality)
            </summary>
            <typeparam name="T">Items type</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
            <typeparam name="K4">Key4 type</typeparam>
            <typeparam name="K5">Key5 type</typeparam>
            <typeparam name="K6">Key6 type</typeparam>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.#ctor(System.Collections.Generic.IEnumerable{`0},WojciechMikołajewicz.SortedList.KeyData{`0,`1}@,WojciechMikołajewicz.SortedList.KeyData{`0,`2}@,WojciechMikołajewicz.SortedList.KeyData{`0,`3}@,WojciechMikołajewicz.SortedList.KeyData{`0,`4}@,WojciechMikołajewicz.SortedList.KeyData{`0,`5}@,WojciechMikołajewicz.SortedList.KeyData{`0,`6}@)">
            <summary>
            Constructor
            </summary>
            <param name="collection">Collection base on which array is created</param>
            <param name="keyData1">Key 1 data</param>
            <param name="keyData2">Key 2 data</param>
            <param name="keyData3">Key 3 data</param>
            <param name="keyData4">Key 4 data</param>
            <param name="keyData5">Key 5 data</param>
            <param name="keyData6">Key 6 data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.#ctor(System.Collections.Generic.IEnumerable{`0},WojciechMikołajewicz.SortedList.KeysData.KeysData{`0,`1,`2,`3,`4,`5,`6})">
            <summary>
            Constructor
            </summary>
            <param name="collection">Collection base on which array is created</param>
            <param name="keysData">Keys data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindEqual(`1)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindEqual(`1,`2)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindLessOrEqual(`1)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindLessOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindLessOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindLessOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindLessOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindLess(`1)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindLess(`1,`2)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindLess(`1,`2,`3)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindLess(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindLess(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindLess(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindGreaterOrEqual(`1)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindGreaterOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindGreaterOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindGreaterOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindGreater(`1)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindGreater(`1,`2)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindGreater(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindGreater(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindGreater(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindGreater(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindEqualRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindLessOrEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindLessOrEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindLessRange(System.Range,`1)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindLessRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindLessRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindLessRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindGreaterOrEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindGreaterOrEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindGreaterRange(System.Range,`1)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindGreaterRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindGreaterRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`7.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8">
            <summary>
            Sorted read only list with binary search based on items compare (not items equality)
            </summary>
            <typeparam name="T">Items type</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
            <typeparam name="K4">Key4 type</typeparam>
            <typeparam name="K5">Key5 type</typeparam>
            <typeparam name="K6">Key6 type</typeparam>
            <typeparam name="K7">Key7 type</typeparam>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.#ctor(System.Collections.Generic.IEnumerable{`0},WojciechMikołajewicz.SortedList.KeyData{`0,`1}@,WojciechMikołajewicz.SortedList.KeyData{`0,`2}@,WojciechMikołajewicz.SortedList.KeyData{`0,`3}@,WojciechMikołajewicz.SortedList.KeyData{`0,`4}@,WojciechMikołajewicz.SortedList.KeyData{`0,`5}@,WojciechMikołajewicz.SortedList.KeyData{`0,`6}@,WojciechMikołajewicz.SortedList.KeyData{`0,`7}@)">
            <summary>
            Constructor
            </summary>
            <param name="collection">Collection base on which array is created</param>
            <param name="keyData1">Key 1 data</param>
            <param name="keyData2">Key 2 data</param>
            <param name="keyData3">Key 3 data</param>
            <param name="keyData4">Key 4 data</param>
            <param name="keyData5">Key 5 data</param>
            <param name="keyData6">Key 6 data</param>
            <param name="keyData7">Key 7 data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.#ctor(System.Collections.Generic.IEnumerable{`0},WojciechMikołajewicz.SortedList.KeysData.KeysData{`0,`1,`2,`3,`4,`5,`6,`7})">
            <summary>
            Constructor
            </summary>
            <param name="collection">Collection base on which array is created</param>
            <param name="keysData">Keys data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindEqual(`1)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindEqual(`1,`2)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindLessOrEqual(`1)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindLessOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindLessOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindLessOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindLessOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindLess(`1)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindLess(`1,`2)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindLess(`1,`2,`3)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindLess(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindLess(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindLess(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindGreaterOrEqual(`1)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindGreaterOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindGreaterOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindGreaterOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindGreater(`1)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindGreater(`1,`2)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindGreater(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindGreater(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindGreater(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindGreater(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindEqualRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindLessOrEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindLessOrEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindLessRange(System.Range,`1)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindLessRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindLessRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindLessRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindGreaterOrEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindGreaterOrEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindGreaterRange(System.Range,`1)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindGreaterRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindGreaterRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`8.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9">
            <summary>
            Sorted read only list with binary search based on items compare (not items equality)
            </summary>
            <typeparam name="T">Items type</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
            <typeparam name="K4">Key4 type</typeparam>
            <typeparam name="K5">Key5 type</typeparam>
            <typeparam name="K6">Key6 type</typeparam>
            <typeparam name="K7">Key7 type</typeparam>
            <typeparam name="K8">Key8 type</typeparam>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.#ctor(System.Collections.Generic.IEnumerable{`0},WojciechMikołajewicz.SortedList.KeyData{`0,`1}@,WojciechMikołajewicz.SortedList.KeyData{`0,`2}@,WojciechMikołajewicz.SortedList.KeyData{`0,`3}@,WojciechMikołajewicz.SortedList.KeyData{`0,`4}@,WojciechMikołajewicz.SortedList.KeyData{`0,`5}@,WojciechMikołajewicz.SortedList.KeyData{`0,`6}@,WojciechMikołajewicz.SortedList.KeyData{`0,`7}@,WojciechMikołajewicz.SortedList.KeyData{`0,`8}@)">
            <summary>
            Constructor
            </summary>
            <param name="collection">Collection base on which array is created</param>
            <param name="keyData1">Key 1 data</param>
            <param name="keyData2">Key 2 data</param>
            <param name="keyData3">Key 3 data</param>
            <param name="keyData4">Key 4 data</param>
            <param name="keyData5">Key 5 data</param>
            <param name="keyData6">Key 6 data</param>
            <param name="keyData7">Key 7 data</param>
            <param name="keyData8">Key 8 data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.#ctor(System.Collections.Generic.IEnumerable{`0},WojciechMikołajewicz.SortedList.KeysData.KeysData{`0,`1,`2,`3,`4,`5,`6,`7,`8})">
            <summary>
            Constructor
            </summary>
            <param name="collection">Collection base on which array is created</param>
            <param name="keysData">Keys data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindEqual(`1)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindEqual(`1,`2)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindLessOrEqual(`1)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindLessOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindLessOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindLessOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindLessOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindLess(`1)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindLess(`1,`2)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindLess(`1,`2,`3)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindLess(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindLess(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindLess(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindGreaterOrEqual(`1)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindGreaterOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindGreaterOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindGreaterOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindGreater(`1)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindGreater(`1,`2)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindGreater(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindGreater(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindGreater(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindGreater(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindEqualRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindLessOrEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindLessOrEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindLessRange(System.Range,`1)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindLessRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindLessRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindLessRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindGreaterOrEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindGreaterOrEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindGreaterRange(System.Range,`1)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindGreaterRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindGreaterRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`9.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10">
            <summary>
            Sorted read only list with binary search based on items compare (not items equality)
            </summary>
            <typeparam name="T">Items type</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
            <typeparam name="K4">Key4 type</typeparam>
            <typeparam name="K5">Key5 type</typeparam>
            <typeparam name="K6">Key6 type</typeparam>
            <typeparam name="K7">Key7 type</typeparam>
            <typeparam name="K8">Key8 type</typeparam>
            <typeparam name="K9">Key9 type</typeparam>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.#ctor(System.Collections.Generic.IEnumerable{`0},WojciechMikołajewicz.SortedList.KeyData{`0,`1}@,WojciechMikołajewicz.SortedList.KeyData{`0,`2}@,WojciechMikołajewicz.SortedList.KeyData{`0,`3}@,WojciechMikołajewicz.SortedList.KeyData{`0,`4}@,WojciechMikołajewicz.SortedList.KeyData{`0,`5}@,WojciechMikołajewicz.SortedList.KeyData{`0,`6}@,WojciechMikołajewicz.SortedList.KeyData{`0,`7}@,WojciechMikołajewicz.SortedList.KeyData{`0,`8}@,WojciechMikołajewicz.SortedList.KeyData{`0,`9}@)">
            <summary>
            Constructor
            </summary>
            <param name="collection">Collection base on which array is created</param>
            <param name="keyData1">Key 1 data</param>
            <param name="keyData2">Key 2 data</param>
            <param name="keyData3">Key 3 data</param>
            <param name="keyData4">Key 4 data</param>
            <param name="keyData5">Key 5 data</param>
            <param name="keyData6">Key 6 data</param>
            <param name="keyData7">Key 7 data</param>
            <param name="keyData8">Key 8 data</param>
            <param name="keyData9">Key 9 data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.#ctor(System.Collections.Generic.IEnumerable{`0},WojciechMikołajewicz.SortedList.KeysData.KeysData{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9})">
            <summary>
            Constructor
            </summary>
            <param name="collection">Collection base on which array is created</param>
            <param name="keysData">Keys data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindEqual(`1)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindEqual(`1,`2)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindLessOrEqual(`1)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindLessOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindLessOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindLessOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindLessOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindLess(`1)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindLess(`1,`2)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindLess(`1,`2,`3)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindLess(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindLess(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindLess(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindGreaterOrEqual(`1)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindGreaterOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindGreaterOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindGreaterOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindGreater(`1)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindGreater(`1,`2)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindGreater(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindGreater(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindGreater(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindGreater(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindEqualRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindLessOrEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindLessOrEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindLessRange(System.Range,`1)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindLessRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindLessRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindLessRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindGreaterOrEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindGreaterOrEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindGreaterRange(System.Range,`1)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindGreaterRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindGreaterRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`10.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11">
            <summary>
            Sorted read only list with binary search based on items compare (not items equality)
            </summary>
            <typeparam name="T">Items type</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
            <typeparam name="K4">Key4 type</typeparam>
            <typeparam name="K5">Key5 type</typeparam>
            <typeparam name="K6">Key6 type</typeparam>
            <typeparam name="K7">Key7 type</typeparam>
            <typeparam name="K8">Key8 type</typeparam>
            <typeparam name="K9">Key9 type</typeparam>
            <typeparam name="K10">Key10 type</typeparam>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.#ctor(System.Collections.Generic.IEnumerable{`0},WojciechMikołajewicz.SortedList.KeyData{`0,`1}@,WojciechMikołajewicz.SortedList.KeyData{`0,`2}@,WojciechMikołajewicz.SortedList.KeyData{`0,`3}@,WojciechMikołajewicz.SortedList.KeyData{`0,`4}@,WojciechMikołajewicz.SortedList.KeyData{`0,`5}@,WojciechMikołajewicz.SortedList.KeyData{`0,`6}@,WojciechMikołajewicz.SortedList.KeyData{`0,`7}@,WojciechMikołajewicz.SortedList.KeyData{`0,`8}@,WojciechMikołajewicz.SortedList.KeyData{`0,`9}@,WojciechMikołajewicz.SortedList.KeyData{`0,`10}@)">
            <summary>
            Constructor
            </summary>
            <param name="collection">Collection base on which array is created</param>
            <param name="keyData1">Key 1 data</param>
            <param name="keyData2">Key 2 data</param>
            <param name="keyData3">Key 3 data</param>
            <param name="keyData4">Key 4 data</param>
            <param name="keyData5">Key 5 data</param>
            <param name="keyData6">Key 6 data</param>
            <param name="keyData7">Key 7 data</param>
            <param name="keyData8">Key 8 data</param>
            <param name="keyData9">Key 9 data</param>
            <param name="keyData10">Key 10 data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.#ctor(System.Collections.Generic.IEnumerable{`0},WojciechMikołajewicz.SortedList.KeysData.KeysData{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10})">
            <summary>
            Constructor
            </summary>
            <param name="collection">Collection base on which array is created</param>
            <param name="keysData">Keys data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindEqual(`1)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindEqual(`1,`2)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindLessOrEqual(`1)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindLessOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindLessOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindLessOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindLessOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindLess(`1)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindLess(`1,`2)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindLess(`1,`2,`3)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindLess(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindLess(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindLess(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindGreaterOrEqual(`1)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindGreaterOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindGreaterOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindGreaterOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindGreater(`1)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindGreater(`1,`2)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindGreater(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindGreater(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindGreater(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindGreater(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindEqualRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindLessOrEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindLessOrEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindLessRange(System.Range,`1)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindLessRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindLessRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindLessRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindGreaterOrEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindGreaterOrEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindGreaterRange(System.Range,`1)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindGreaterRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindGreaterRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`11.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12">
            <summary>
            Sorted read only list with binary search based on items compare (not items equality)
            </summary>
            <typeparam name="T">Items type</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
            <typeparam name="K4">Key4 type</typeparam>
            <typeparam name="K5">Key5 type</typeparam>
            <typeparam name="K6">Key6 type</typeparam>
            <typeparam name="K7">Key7 type</typeparam>
            <typeparam name="K8">Key8 type</typeparam>
            <typeparam name="K9">Key9 type</typeparam>
            <typeparam name="K10">Key10 type</typeparam>
            <typeparam name="K11">Key11 type</typeparam>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.#ctor(System.Collections.Generic.IEnumerable{`0},WojciechMikołajewicz.SortedList.KeyData{`0,`1}@,WojciechMikołajewicz.SortedList.KeyData{`0,`2}@,WojciechMikołajewicz.SortedList.KeyData{`0,`3}@,WojciechMikołajewicz.SortedList.KeyData{`0,`4}@,WojciechMikołajewicz.SortedList.KeyData{`0,`5}@,WojciechMikołajewicz.SortedList.KeyData{`0,`6}@,WojciechMikołajewicz.SortedList.KeyData{`0,`7}@,WojciechMikołajewicz.SortedList.KeyData{`0,`8}@,WojciechMikołajewicz.SortedList.KeyData{`0,`9}@,WojciechMikołajewicz.SortedList.KeyData{`0,`10}@,WojciechMikołajewicz.SortedList.KeyData{`0,`11}@)">
            <summary>
            Constructor
            </summary>
            <param name="collection">Collection base on which array is created</param>
            <param name="keyData1">Key 1 data</param>
            <param name="keyData2">Key 2 data</param>
            <param name="keyData3">Key 3 data</param>
            <param name="keyData4">Key 4 data</param>
            <param name="keyData5">Key 5 data</param>
            <param name="keyData6">Key 6 data</param>
            <param name="keyData7">Key 7 data</param>
            <param name="keyData8">Key 8 data</param>
            <param name="keyData9">Key 9 data</param>
            <param name="keyData10">Key 10 data</param>
            <param name="keyData11">Key 11 data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.#ctor(System.Collections.Generic.IEnumerable{`0},WojciechMikołajewicz.SortedList.KeysData.KeysData{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11})">
            <summary>
            Constructor
            </summary>
            <param name="collection">Collection base on which array is created</param>
            <param name="keysData">Keys data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindEqual(`1)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindEqual(`1,`2)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLessOrEqual(`1)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLessOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLessOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLessOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLessOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLess(`1)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLess(`1,`2)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLess(`1,`2,`3)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLess(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLess(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLess(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreaterOrEqual(`1)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreaterOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreaterOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreaterOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreater(`1)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreater(`1,`2)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreater(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreater(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreater(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreater(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindEqualRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLessOrEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLessOrEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLessRange(System.Range,`1)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLessRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLessRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLessRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreaterOrEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreaterOrEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreaterRange(System.Range,`1)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreaterRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreaterRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`12.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13">
            <summary>
            Sorted read only list with binary search based on items compare (not items equality)
            </summary>
            <typeparam name="T">Items type</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
            <typeparam name="K4">Key4 type</typeparam>
            <typeparam name="K5">Key5 type</typeparam>
            <typeparam name="K6">Key6 type</typeparam>
            <typeparam name="K7">Key7 type</typeparam>
            <typeparam name="K8">Key8 type</typeparam>
            <typeparam name="K9">Key9 type</typeparam>
            <typeparam name="K10">Key10 type</typeparam>
            <typeparam name="K11">Key11 type</typeparam>
            <typeparam name="K12">Key12 type</typeparam>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.#ctor(System.Collections.Generic.IEnumerable{`0},WojciechMikołajewicz.SortedList.KeyData{`0,`1}@,WojciechMikołajewicz.SortedList.KeyData{`0,`2}@,WojciechMikołajewicz.SortedList.KeyData{`0,`3}@,WojciechMikołajewicz.SortedList.KeyData{`0,`4}@,WojciechMikołajewicz.SortedList.KeyData{`0,`5}@,WojciechMikołajewicz.SortedList.KeyData{`0,`6}@,WojciechMikołajewicz.SortedList.KeyData{`0,`7}@,WojciechMikołajewicz.SortedList.KeyData{`0,`8}@,WojciechMikołajewicz.SortedList.KeyData{`0,`9}@,WojciechMikołajewicz.SortedList.KeyData{`0,`10}@,WojciechMikołajewicz.SortedList.KeyData{`0,`11}@,WojciechMikołajewicz.SortedList.KeyData{`0,`12}@)">
            <summary>
            Constructor
            </summary>
            <param name="collection">Collection base on which array is created</param>
            <param name="keyData1">Key 1 data</param>
            <param name="keyData2">Key 2 data</param>
            <param name="keyData3">Key 3 data</param>
            <param name="keyData4">Key 4 data</param>
            <param name="keyData5">Key 5 data</param>
            <param name="keyData6">Key 6 data</param>
            <param name="keyData7">Key 7 data</param>
            <param name="keyData8">Key 8 data</param>
            <param name="keyData9">Key 9 data</param>
            <param name="keyData10">Key 10 data</param>
            <param name="keyData11">Key 11 data</param>
            <param name="keyData12">Key 12 data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.#ctor(System.Collections.Generic.IEnumerable{`0},WojciechMikołajewicz.SortedList.KeysData.KeysData{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12})">
            <summary>
            Constructor
            </summary>
            <param name="collection">Collection base on which array is created</param>
            <param name="keysData">Keys data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindEqual(`1)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindEqual(`1,`2)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLessOrEqual(`1)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLessOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLessOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLessOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLessOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLess(`1)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLess(`1,`2)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLess(`1,`2,`3)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLess(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLess(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLess(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreaterOrEqual(`1)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreaterOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreaterOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreaterOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreater(`1)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreater(`1,`2)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreater(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreater(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreater(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreater(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindEqualRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLessOrEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLessOrEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLessRange(System.Range,`1)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLessRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLessRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLessRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreaterOrEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreaterOrEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreaterRange(System.Range,`1)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreaterRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreaterRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`13.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14">
            <summary>
            Sorted read only list with binary search based on items compare (not items equality)
            </summary>
            <typeparam name="T">Items type</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
            <typeparam name="K4">Key4 type</typeparam>
            <typeparam name="K5">Key5 type</typeparam>
            <typeparam name="K6">Key6 type</typeparam>
            <typeparam name="K7">Key7 type</typeparam>
            <typeparam name="K8">Key8 type</typeparam>
            <typeparam name="K9">Key9 type</typeparam>
            <typeparam name="K10">Key10 type</typeparam>
            <typeparam name="K11">Key11 type</typeparam>
            <typeparam name="K12">Key12 type</typeparam>
            <typeparam name="K13">Key13 type</typeparam>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.#ctor(System.Collections.Generic.IEnumerable{`0},WojciechMikołajewicz.SortedList.KeyData{`0,`1}@,WojciechMikołajewicz.SortedList.KeyData{`0,`2}@,WojciechMikołajewicz.SortedList.KeyData{`0,`3}@,WojciechMikołajewicz.SortedList.KeyData{`0,`4}@,WojciechMikołajewicz.SortedList.KeyData{`0,`5}@,WojciechMikołajewicz.SortedList.KeyData{`0,`6}@,WojciechMikołajewicz.SortedList.KeyData{`0,`7}@,WojciechMikołajewicz.SortedList.KeyData{`0,`8}@,WojciechMikołajewicz.SortedList.KeyData{`0,`9}@,WojciechMikołajewicz.SortedList.KeyData{`0,`10}@,WojciechMikołajewicz.SortedList.KeyData{`0,`11}@,WojciechMikołajewicz.SortedList.KeyData{`0,`12}@,WojciechMikołajewicz.SortedList.KeyData{`0,`13}@)">
            <summary>
            Constructor
            </summary>
            <param name="collection">Collection base on which array is created</param>
            <param name="keyData1">Key 1 data</param>
            <param name="keyData2">Key 2 data</param>
            <param name="keyData3">Key 3 data</param>
            <param name="keyData4">Key 4 data</param>
            <param name="keyData5">Key 5 data</param>
            <param name="keyData6">Key 6 data</param>
            <param name="keyData7">Key 7 data</param>
            <param name="keyData8">Key 8 data</param>
            <param name="keyData9">Key 9 data</param>
            <param name="keyData10">Key 10 data</param>
            <param name="keyData11">Key 11 data</param>
            <param name="keyData12">Key 12 data</param>
            <param name="keyData13">Key 13 data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.#ctor(System.Collections.Generic.IEnumerable{`0},WojciechMikołajewicz.SortedList.KeysData.KeysData{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13})">
            <summary>
            Constructor
            </summary>
            <param name="collection">Collection base on which array is created</param>
            <param name="keysData">Keys data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindEqual(`1)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindEqual(`1,`2)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLessOrEqual(`1)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLessOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLessOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLessOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLessOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLess(`1)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLess(`1,`2)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLess(`1,`2,`3)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLess(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLess(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLess(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreaterOrEqual(`1)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreaterOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreaterOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreaterOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreater(`1)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreater(`1,`2)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreater(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreater(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreater(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreater(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindEqualRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLessOrEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLessOrEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLessRange(System.Range,`1)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLessRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLessRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLessRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreaterOrEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreaterOrEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreaterRange(System.Range,`1)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreaterRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreaterRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`14.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15">
            <summary>
            Sorted read only list with binary search based on items compare (not items equality)
            </summary>
            <typeparam name="T">Items type</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
            <typeparam name="K4">Key4 type</typeparam>
            <typeparam name="K5">Key5 type</typeparam>
            <typeparam name="K6">Key6 type</typeparam>
            <typeparam name="K7">Key7 type</typeparam>
            <typeparam name="K8">Key8 type</typeparam>
            <typeparam name="K9">Key9 type</typeparam>
            <typeparam name="K10">Key10 type</typeparam>
            <typeparam name="K11">Key11 type</typeparam>
            <typeparam name="K12">Key12 type</typeparam>
            <typeparam name="K13">Key13 type</typeparam>
            <typeparam name="K14">Key14 type</typeparam>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.#ctor(System.Collections.Generic.IEnumerable{`0},WojciechMikołajewicz.SortedList.KeyData{`0,`1}@,WojciechMikołajewicz.SortedList.KeyData{`0,`2}@,WojciechMikołajewicz.SortedList.KeyData{`0,`3}@,WojciechMikołajewicz.SortedList.KeyData{`0,`4}@,WojciechMikołajewicz.SortedList.KeyData{`0,`5}@,WojciechMikołajewicz.SortedList.KeyData{`0,`6}@,WojciechMikołajewicz.SortedList.KeyData{`0,`7}@,WojciechMikołajewicz.SortedList.KeyData{`0,`8}@,WojciechMikołajewicz.SortedList.KeyData{`0,`9}@,WojciechMikołajewicz.SortedList.KeyData{`0,`10}@,WojciechMikołajewicz.SortedList.KeyData{`0,`11}@,WojciechMikołajewicz.SortedList.KeyData{`0,`12}@,WojciechMikołajewicz.SortedList.KeyData{`0,`13}@,WojciechMikołajewicz.SortedList.KeyData{`0,`14}@)">
            <summary>
            Constructor
            </summary>
            <param name="collection">Collection base on which array is created</param>
            <param name="keyData1">Key 1 data</param>
            <param name="keyData2">Key 2 data</param>
            <param name="keyData3">Key 3 data</param>
            <param name="keyData4">Key 4 data</param>
            <param name="keyData5">Key 5 data</param>
            <param name="keyData6">Key 6 data</param>
            <param name="keyData7">Key 7 data</param>
            <param name="keyData8">Key 8 data</param>
            <param name="keyData9">Key 9 data</param>
            <param name="keyData10">Key 10 data</param>
            <param name="keyData11">Key 11 data</param>
            <param name="keyData12">Key 12 data</param>
            <param name="keyData13">Key 13 data</param>
            <param name="keyData14">Key 14 data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.#ctor(System.Collections.Generic.IEnumerable{`0},WojciechMikołajewicz.SortedList.KeysData.KeysData{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14})">
            <summary>
            Constructor
            </summary>
            <param name="collection">Collection base on which array is created</param>
            <param name="keysData">Keys data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindEqual(`1)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindEqual(`1,`2)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessOrEqual(`1)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLess(`1)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLess(`1,`2)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLess(`1,`2,`3)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLess(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLess(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLess(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterOrEqual(`1)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreater(`1)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreater(`1,`2)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreater(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreater(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreater(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreater(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindEqualRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessOrEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessOrEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessRange(System.Range,`1)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterOrEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterOrEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterRange(System.Range,`1)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`15.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16">
            <summary>
            Sorted read only list with binary search based on items compare (not items equality)
            </summary>
            <typeparam name="T">Items type</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
            <typeparam name="K4">Key4 type</typeparam>
            <typeparam name="K5">Key5 type</typeparam>
            <typeparam name="K6">Key6 type</typeparam>
            <typeparam name="K7">Key7 type</typeparam>
            <typeparam name="K8">Key8 type</typeparam>
            <typeparam name="K9">Key9 type</typeparam>
            <typeparam name="K10">Key10 type</typeparam>
            <typeparam name="K11">Key11 type</typeparam>
            <typeparam name="K12">Key12 type</typeparam>
            <typeparam name="K13">Key13 type</typeparam>
            <typeparam name="K14">Key14 type</typeparam>
            <typeparam name="K15">Key15 type</typeparam>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.#ctor(System.Collections.Generic.IEnumerable{`0},WojciechMikołajewicz.SortedList.KeyData{`0,`1}@,WojciechMikołajewicz.SortedList.KeyData{`0,`2}@,WojciechMikołajewicz.SortedList.KeyData{`0,`3}@,WojciechMikołajewicz.SortedList.KeyData{`0,`4}@,WojciechMikołajewicz.SortedList.KeyData{`0,`5}@,WojciechMikołajewicz.SortedList.KeyData{`0,`6}@,WojciechMikołajewicz.SortedList.KeyData{`0,`7}@,WojciechMikołajewicz.SortedList.KeyData{`0,`8}@,WojciechMikołajewicz.SortedList.KeyData{`0,`9}@,WojciechMikołajewicz.SortedList.KeyData{`0,`10}@,WojciechMikołajewicz.SortedList.KeyData{`0,`11}@,WojciechMikołajewicz.SortedList.KeyData{`0,`12}@,WojciechMikołajewicz.SortedList.KeyData{`0,`13}@,WojciechMikołajewicz.SortedList.KeyData{`0,`14}@,WojciechMikołajewicz.SortedList.KeyData{`0,`15}@)">
            <summary>
            Constructor
            </summary>
            <param name="collection">Collection base on which array is created</param>
            <param name="keyData1">Key 1 data</param>
            <param name="keyData2">Key 2 data</param>
            <param name="keyData3">Key 3 data</param>
            <param name="keyData4">Key 4 data</param>
            <param name="keyData5">Key 5 data</param>
            <param name="keyData6">Key 6 data</param>
            <param name="keyData7">Key 7 data</param>
            <param name="keyData8">Key 8 data</param>
            <param name="keyData9">Key 9 data</param>
            <param name="keyData10">Key 10 data</param>
            <param name="keyData11">Key 11 data</param>
            <param name="keyData12">Key 12 data</param>
            <param name="keyData13">Key 13 data</param>
            <param name="keyData14">Key 14 data</param>
            <param name="keyData15">Key 15 data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.#ctor(System.Collections.Generic.IEnumerable{`0},WojciechMikołajewicz.SortedList.KeysData.KeysData{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15})">
            <summary>
            Constructor
            </summary>
            <param name="collection">Collection base on which array is created</param>
            <param name="keysData">Keys data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindEqual(`1)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindEqual(`1,`2)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessOrEqual(`1)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLess(`1)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLess(`1,`2)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLess(`1,`2,`3)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLess(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLess(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLess(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterOrEqual(`1)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreater(`1)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreater(`1,`2)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreater(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreater(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreater(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreater(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindEqualRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessOrEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessOrEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessRange(System.Range,`1)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterOrEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterOrEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterRange(System.Range,`1)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`16.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17">
            <summary>
            Sorted read only list with binary search based on items compare (not items equality)
            </summary>
            <typeparam name="T">Items type</typeparam>
            <typeparam name="K1">Key1 type</typeparam>
            <typeparam name="K2">Key2 type</typeparam>
            <typeparam name="K3">Key3 type</typeparam>
            <typeparam name="K4">Key4 type</typeparam>
            <typeparam name="K5">Key5 type</typeparam>
            <typeparam name="K6">Key6 type</typeparam>
            <typeparam name="K7">Key7 type</typeparam>
            <typeparam name="K8">Key8 type</typeparam>
            <typeparam name="K9">Key9 type</typeparam>
            <typeparam name="K10">Key10 type</typeparam>
            <typeparam name="K11">Key11 type</typeparam>
            <typeparam name="K12">Key12 type</typeparam>
            <typeparam name="K13">Key13 type</typeparam>
            <typeparam name="K14">Key14 type</typeparam>
            <typeparam name="K15">Key15 type</typeparam>
            <typeparam name="K16">Key16 type</typeparam>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.#ctor(System.Collections.Generic.IEnumerable{`0},WojciechMikołajewicz.SortedList.KeyData{`0,`1}@,WojciechMikołajewicz.SortedList.KeyData{`0,`2}@,WojciechMikołajewicz.SortedList.KeyData{`0,`3}@,WojciechMikołajewicz.SortedList.KeyData{`0,`4}@,WojciechMikołajewicz.SortedList.KeyData{`0,`5}@,WojciechMikołajewicz.SortedList.KeyData{`0,`6}@,WojciechMikołajewicz.SortedList.KeyData{`0,`7}@,WojciechMikołajewicz.SortedList.KeyData{`0,`8}@,WojciechMikołajewicz.SortedList.KeyData{`0,`9}@,WojciechMikołajewicz.SortedList.KeyData{`0,`10}@,WojciechMikołajewicz.SortedList.KeyData{`0,`11}@,WojciechMikołajewicz.SortedList.KeyData{`0,`12}@,WojciechMikołajewicz.SortedList.KeyData{`0,`13}@,WojciechMikołajewicz.SortedList.KeyData{`0,`14}@,WojciechMikołajewicz.SortedList.KeyData{`0,`15}@,WojciechMikołajewicz.SortedList.KeyData{`0,`16}@)">
            <summary>
            Constructor
            </summary>
            <param name="collection">Collection base on which array is created</param>
            <param name="keyData1">Key 1 data</param>
            <param name="keyData2">Key 2 data</param>
            <param name="keyData3">Key 3 data</param>
            <param name="keyData4">Key 4 data</param>
            <param name="keyData5">Key 5 data</param>
            <param name="keyData6">Key 6 data</param>
            <param name="keyData7">Key 7 data</param>
            <param name="keyData8">Key 8 data</param>
            <param name="keyData9">Key 9 data</param>
            <param name="keyData10">Key 10 data</param>
            <param name="keyData11">Key 11 data</param>
            <param name="keyData12">Key 12 data</param>
            <param name="keyData13">Key 13 data</param>
            <param name="keyData14">Key 14 data</param>
            <param name="keyData15">Key 15 data</param>
            <param name="keyData16">Key 16 data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.#ctor(System.Collections.Generic.IEnumerable{`0},WojciechMikołajewicz.SortedList.KeysData.KeysData{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16})">
            <summary>
            Constructor
            </summary>
            <param name="collection">Collection base on which array is created</param>
            <param name="keysData">Keys data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindEqual(`1)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindEqual(`1,`2)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16)">
            <summary>
            Get part of the list of elements equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <param name="key16">Key 16 value</param>
            <returns>Part of the list of elements equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessOrEqual(`1)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16)">
            <summary>
            Get part of the list of elements less or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <param name="key16">Key 16 value</param>
            <returns>Part of the list of elements less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLess(`1)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLess(`1,`2)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLess(`1,`2,`3)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLess(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLess(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLess(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLess(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16)">
            <summary>
            Get part of the list of elements less than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <param name="key16">Key 16 value</param>
            <returns>Part of the list of elements less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterOrEqual(`1)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterOrEqual(`1,`2)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterOrEqual(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterOrEqual(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterOrEqual(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16)">
            <summary>
            Get part of the list of elements greater or equal to specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <param name="key16">Key 16 value</param>
            <returns>Part of the list of elements greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreater(`1)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreater(`1,`2)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreater(`1,`2,`3)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreater(`1,`2,`3,`4)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreater(`1,`2,`3,`4,`5)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreater(`1,`2,`3,`4,`5,`6)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreater(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16)">
            <summary>
            Get part of the list of elements greater than specified keys values
            </summary>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <param name="key16">Key 16 value</param>
            <returns>Part of the list of elements greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindEqualRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16)">
            <summary>
            Get range in which items are equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <param name="key16">Key 16 value</param>
            <returns>Range in which items are equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessOrEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessOrEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16)">
            <summary>
            Get range in which items are less or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <param name="key16">Key 16 value</param>
            <returns>Range in which items are less or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessRange(System.Range,`1)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindLessRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16)">
            <summary>
            Get range in which items are less than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <param name="key16">Key 16 value</param>
            <returns>Range in which items are less than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterOrEqualRange(System.Range,`1)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterOrEqualRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterOrEqualRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16)">
            <summary>
            Get range in which items are greater or equal to specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <param name="key16">Key 16 value</param>
            <returns>Range in which items are greater or equal to specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterRange(System.Range,`1)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterRange(System.Range,`1,`2)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterRange(System.Range,`1,`2,`3)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyList`17.BinaryFindGreaterRange(System.Range,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16)">
            <summary>
            Get range in which items are greater than specified keys values. Only items in <paramref name="range"/> are considered.
            </summary>
            <param name="range">Source range, in which we are searching</param>
            <param name="key1">Key 1 value</param>
            <param name="key2">Key 2 value</param>
            <param name="key3">Key 3 value</param>
            <param name="key4">Key 4 value</param>
            <param name="key5">Key 5 value</param>
            <param name="key6">Key 6 value</param>
            <param name="key7">Key 7 value</param>
            <param name="key8">Key 8 value</param>
            <param name="key9">Key 9 value</param>
            <param name="key10">Key 10 value</param>
            <param name="key11">Key 11 value</param>
            <param name="key12">Key 12 value</param>
            <param name="key13">Key 13 value</param>
            <param name="key14">Key 14 value</param>
            <param name="key15">Key 15 value</param>
            <param name="key16">Key 16 value</param>
            <returns>Range in which items are greater than specified keys values</returns>
        </member>
        <member name="T:WojciechMikołajewicz.SortedList.SortedReadOnlyListBase`2">
            <summary>
            Sorted read only list with binary search based on items compare (not items equality)
            </summary>
            <typeparam name="T">Items type</typeparam>
            <typeparam name="TKeysData">Sorting keys type</typeparam>
        </member>
        <member name="F:WojciechMikołajewicz.SortedList.SortedReadOnlyListBase`2._Array">
            <summary>
            Internal sorted array
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListBase`2.KeysData">
            <summary>
            Sorting keys
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListBase`2.Count">
            <summary>
            Number of items
            </summary>
        </member>
        <member name="P:WojciechMikołajewicz.SortedList.SortedReadOnlyListBase`2.Item(System.Int32)">
            <summary>
            Returns an item of <paramref name="index"/>
            </summary>
            <param name="index">Index of the item to return</param>
            <returns>Item of specified <paramref name="index"/></returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListBase`2.#ctor(System.Collections.Generic.IEnumerable{`0},`1)">
            <summary>
            Constructor
            </summary>
            <param name="collection">Collection base on which array is created</param>
            <param name="keysData">Keys data</param>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListBase`2.ItemRef(System.Int32)">
            <summary>
            Gets a read-only reference to the element at the specified <paramref name="index"/> in the read-only list
            </summary>
            <param name="index">The zero-based index of the element to get a reference to</param>
            <returns>A read-only reference to the element at the specified <paramref name="index"/> in the read-only list</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListBase`2.AsMemory">
            <summary>
            Get ReadOnlyMemory from internal array
            </summary>
            <returns>ReadOnlyMemory from internal array</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListBase`2.GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:WojciechMikołajewicz.SortedList.SortedReadOnlyListBase`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns>Enumerator</returns>
        </member>
    </members>
</doc>
